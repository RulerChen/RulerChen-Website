"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["1289"],{8460:function(n,e,s){s.r(e),s.d(e,{frontMatter:()=>r,default:()=>p,toc:()=>o,metadata:()=>i,assets:()=>c,contentTitle:()=>a});var i=JSON.parse('{"id":"PostgreSQL/pg-ha","title":"[PG] PostgreSQL High Availability","description":"Postgres \u9AD8\u53EF\u7528\u6027","source":"@site/docs/PostgreSQL/pg-ha.mdx","sourceDirName":"PostgreSQL","slug":"/PostgreSQL/pg-ha","permalink":"/RulerChen-Website/docs/PostgreSQL/pg-ha","draft":false,"unlisted":false,"editUrl":"https://github.com/RulerChen/RulerChen-Website/tree/main/docs/PostgreSQL/pg-ha.mdx","tags":[],"version":"current","lastUpdatedAt":1735389509000,"sidebarPosition":20,"frontMatter":{"title":"[PG] PostgreSQL High Availability","sidebar_position":20,"description":"Postgres \u9AD8\u53EF\u7528\u6027","keywords":["Postgres","\u9AD8\u53EF\u7528\u6027"]},"sidebar":"tutorialSidebar","previous":{"title":"[PG] PostgreSQL Performance Tuning","permalink":"/RulerChen-Website/docs/PostgreSQL/pg-tuning"},"next":{"title":"Observability","permalink":"/RulerChen-Website/docs/Observability/"}}'),t=s(85893),l=s(50065);let r={title:"[PG] PostgreSQL High Availability",sidebar_position:"20",description:"Postgres \u9AD8\u53EF\u7528\u6027",keywords:["Postgres","\u9AD8\u53EF\u7528\u6027"]},a=void 0,c={},o=[{value:"Environment Setup",id:"environment-setup",level:2},{value:"Scaling PostgreSQL",id:"scaling-postgresql",level:2},{value:"Streaming Replication",id:"streaming-replication",level:2},{value:"Logical Replication",id:"logical-replication",level:2},{value:"PgBouncer",id:"pgbouncer",level:2},{value:"Partition",id:"partition",level:2},{value:"Sharding",id:"sharding",level:2},{value:"PostgreSQL High Availability",id:"postgresql-high-availability",level:2},{value:"Pgpool II",id:"pgpool-ii",level:2},{value:"Reference",id:"reference",level:2}];function d(n){let e={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["\u9019\u7BC7\u6587\u7AE0\u662F\u6211\u770B\u4E86 ",(0,t.jsx)(e.a,{href:"https://www.udemy.com/course/postgresql-replication-high-availability-ha-and-scalability",children:"PostgreSQL Replication, High Availability HA and Scalability"})," \u9019\u9580\u8AB2\u5F8C\u7684\u7B46\u8A18\u3002"]}),"\n",(0,t.jsx)(e.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u9019\u7BC7\u6587\u7AE0\u4E2D\uFF0C\u6211\u6703\u5728 GCP \u4E0A\u9762\u5EFA\u7ACB\u4E00\u500B VM (Debian) \u4F86\u5B89\u88DD PostgreSQL (15.10) \u4F86\u505A demo"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo apt install postgresql\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5B89\u88DD\u5B8C\u4E4B\u5F8C\u61C9\u8A72\u6703\u81EA\u884C\u555F\u52D5\uFF0C\u6211\u5011\u53EF\u4EE5\u900F\u904E\u4EE5\u4E0B\u6307\u4EE4\u4F86\u78BA\u8A8D\u662F\u5426\u6709\u555F\u52D5"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo systemctl status postgresql\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u6211\u5011\u53EF\u4EE5\u5207\u63DB\u4F7F\u7528\u8005\u4E26\u4E14\u9032\u5165 psql \u4F86\u9032\u884C\u64CD\u4F5C"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npsql\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u8F38\u5165 ",(0,t.jsx)(e.code,{children:"\\q"})," \u5373\u53EF\u96E2\u958B psql"]}),"\n",(0,t.jsxs)(e.p,{children:["\u9664\u6B64\u4E4B\u5916\u6211\u5011\u6703\u4F7F\u7528\u5230 ",(0,t.jsx)(e.code,{children:"pg_ctl"})," \u9019\u500B\u6307\u4EE4\uFF0C\u9700\u8981\u5148\u8A2D\u5B9A ",(0,t.jsx)(e.code,{children:".bashrc"})," \u8DDF ",(0,t.jsx)(e.code,{children:".bash_profile"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"nano ~/.bashrc\n# set export PATH=$PATH:/usr/lib/postgresql/15/bin\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"nano ~/.bash_profile\n# set\n# if [ -f ~/.bashrc ]; then\n#   . ~/.bashrc\n# fi\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u91CD\u65B0\u767B\u5165\u5C31\u6703\u81EA\u52D5\u8F09\u5165\u8A2D\u5B9A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pg_ctl --version\n"})}),"\n",(0,t.jsx)(e.h2,{id:"scaling-postgresql",children:"Scaling PostgreSQL"}),"\n",(0,t.jsx)(e.p,{children:"\u7576\u6211\u5011\u7684\u8CC7\u6599\u5EAB\u9700\u8981\u8655\u7406\u5927\u91CF\u7684\u8CC7\u6599\u6642\uFF0C\u6211\u5011\u9996\u5148\u9700\u8981\u6AA2\u67E5\u6211\u5011\u7684\u8CC7\u6599\u5EAB\u662F\u5426\u5DF2\u7D93\u9054\u5230\u5176\u8655\u7406\u80FD\u529B\u7684\u6975\u9650\uFF0C\u50CF\u662F SQL \u512A\u5316\u6216\u53C3\u6578\u8ABF\u6574\u7B49\u7B49\uFF0C\n\u5982\u679C\u9084\u662F\u6C92\u8FA6\u6CD5\u63D0\u4F9B\u8DB3\u5920\u7684\u6548\u80FD\uFF0C\u6211\u5011\u5C31\u9700\u8981\u8003\u616E\u64F4\u5145\u6211\u5011\u7684\u8CC7\u6599\u5EAB"}),"\n",(0,t.jsx)(e.p,{children:"\u64F4\u5145\u8CC7\u6599\u5EAB\u7684\u65B9\u5F0F\u5927\u81F4\u5206\u70BA\u4EE5\u4E0B\u5169\u7A2E :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Vertical Scaling"}),": \u589E\u52A0\u8CC7\u6E90\uFF0C\u50CF\u662F CPU\u3001Memory\u3001Storage \u7B49\u7B49"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Horizontal Scaling"}),": \u589E\u52A0\u7BC0\u9EDE\uFF0C\u50CF\u662F\u589E\u52A0\u8CC7\u6599\u5EAB\u7BC0\u9EDE\u3001\u589E\u52A0\u8CC7\u6599\u5EAB\u53E2\u96C6\u7B49\u7B49"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Scaling",src:s(19069).Z+"",width:"1654",height:"904"})}),"\n",(0,t.jsx)(e.h2,{id:"streaming-replication",children:"Streaming Replication"}),"\n",(0,t.jsx)(e.p,{children:"Streaming Replication \u662F PostgreSQL \u7528\u4F86\u5BE6\u73FE\u9AD8\u53EF\u7528\u6027\u7684\u4E3B\u8981\u6A5F\u5236\uFF0C\u5B83\u900F\u904E\u5C07\u4E3B\u7BC0\u9EDE\u7684 WAL \u65E5\u8A8C\u50B3\u9001\u5230\u5F9E\u7BC0\u9EDE\uFF0C\u5F9E\u800C\u5BE6\u73FE\u63A5\u8FD1\u5BE6\u6642\u7684\u8CC7\u6599\u540C\u6B65\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u5728 PostgreSQL \u4E2D\u9810\u8A2D\u7684\u57F7\u884C\u65B9\u5F0F\u662F\u975E\u540C\u6B65\u7684\uFF0C\u8AAA\u4E3B\u7BC0\u9EDE\u5728\u57F7\u884C\u5B8C\u4E00\u500B transaction \u5F8C\uFF0C\u4E0D\u9700\u8981\u7B49\u5F85\u5F9E\u7BC0\u9EDE\u78BA\u8A8D\u6536\u5230 WAL \u65E5\u8A8C\uFF0C\u5C31\u53EF\u4EE5\u7E7C\u7E8C\u57F7\u884C\u4E0B\u4E00\u500B transaction\u3002\n\u9019\u7A2E\u65B9\u6CD5\u7684\u597D\u8655\u662F\u6548\u80FD\u8F03\u9AD8\uFF0C\u7F3A\u9EDE\u662F\u5982\u679C\u767C\u751F\u6545\u969C\uFF0C\u53EF\u80FD\u6703\u56E0\u70BA WAL \u7F3A\u5C11\u800C\u5C0E\u81F4\u8CC7\u6599\u4E0D\u4E00\u81F4\u3002\n\u6211\u5011\u4E5F\u53EF\u4EE5\u8A2D\u7F6E\u70BA\u540C\u6B65\uFF0C\u9019\u6A23\u4E3B\u7BC0\u9EDE\u5728\u57F7\u884C\u5B8C\u5F8C\uFF0C\u9700\u8981\u7B49\u5F85\u5F9E\u7BC0\u9EDE\u78BA\u8A8D\u6536\u5230 WAL \u65E5\u8A8C\uFF0C\u624D\u80FD\u7E7C\u7E8C\u57F7\u884C\uFF0C\n\u9019\u7A2E\u65B9\u6CD5\u7684\u597D\u8655\u662F\u8CC7\u6599\u4E00\u81F4\u6027\u8F03\u9AD8\u4E14\u53EF\u4EE5\u4FDD\u8B49\u8CC7\u6599\u7684\u5B8C\u6574\u6027\uFF0C\u7F3A\u9EDE\u662F\u6548\u80FD\u8F03\u4F4E\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u6211\u5011\u53EF\u4EE5\u91DD\u5C0D\u4E0D\u540C\u7684\u8CC7\u6599 (table)\uFF0C\u4F86\u9078\u64C7\u4E0D\u540C\u7684\u65B9\u5F0F\u3002"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Streaming Replication",src:s(88833).Z+"",width:"1052",height:"548"})}),"\n",(0,t.jsx)(e.p,{children:"synchronous_commit \u7684\u8A2D\u5B9A\u6709\u4EE5\u4E0B\u5E7E\u7A2E :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"off"}),": \u53EA\u5BEB\u5165 shared buffer\uFF0C\u4E0D\u4FDD\u8B49\u5BEB\u5165 WAL \u65E5\u8A8C"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"local"}),": \u5BEB\u5165 WAL buffer\uFF0C\u4E26\u540C\u6B65\u5230\u672C\u5730\u7684\u786C\u789F"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"remote_write"}),": \u4E3B\u7BC0\u9EDE\u5BEB\u5165\u786C\u789F\uFF0C\u5F9E\u7BC0\u9EDE\u7684 WAL buffer \u6536\u5230\u4F46\u4E0D\u4FDD\u8B49\u5BEB\u5165\u786C\u789F"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"remote_apply"}),": \u5728\u55AE\u6A5F\u72C0\u614B\u4E0B\u8207 ",(0,t.jsx)(e.code,{children:"local"})," \u76F8\u540C\uFF0C\u5728\u591A\u6A5F\u74B0\u5883\u4E0B\uFF0C\u4E3B\u7BC0\u9EDE\u5BEB\u5165\u786C\u789F\uFF0C\u5F9E\u7BC0\u9EDE\u6536\u5230\u4E26\u5BEB\u5165\u786C\u789F"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"on"}),": \u4E3B\u7BC0\u9EDE\u5BEB\u5165\u786C\u789F\uFF0C\u5F9E\u7BC0\u9EDE\u6536\u5230\u4E26\u5BEB\u5165\u786C\u789F\u4E26\u6210\u529F\u61C9\u7528"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u9996\u5148\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"initdb"})," \u4F86\u521D\u59CB\u5316\u8CC7\u6599\u5EAB\u96C6\u7FA4\uFF0C\u8CC7\u6599\u5EAB\u96C6\u7FA4\u662F\u7531\u55AE\u500B\u8CC7\u6599\u5EAB\u5BE6\u4F8B\u6240\u7BA1\u7406\u7684\u8CC7\u6599\u5EAB\u96C6\u5408\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"which initdb\n/usr/lib/postgresql/15/bin/initdb\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"initdb -D /tmp/primary_db/\nnano /tmp/primary_db/postgresql.conf\n# set listen_addresses to '*'\n# set port to 5433\n\n# set permission\nsudo chown -R postgres:postgres /tmp/primary_db\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db start\npsql --port=5433 postgres\n\ncreate user requser replication;\n\nnano /tmp/primary_db/pg_hba.conf\n# add the following line\n# host all requser 127.0.0.1/32 trust\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db restart\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u63A5\u8457\u6211\u5011\u5275\u5EFA\u4E00\u500B replication \u7684\u8CC7\u6599\u5EAB\uFF0C\u4E26\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"pg_basebackup"})," \u4F86\u9032\u884C\u8907\u88FD"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pg_basebackup -h localhost -U requser --checkpoint=fast -D /tmp/replica_db -R --slot=some_slot -C --port 5433\nnano /tmp/replica_db/postgresql.conf\n\n# set listen_addresses to '*'\n# set port to 5434\npg_ctl -D /tmp/replica_db start\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6700\u5F8C\u8B93\u6211\u5011\u4F86\u505A\u4E3B\u7BC0\u9EDE\u7684\u6E2C\u8A66"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql --port=5433 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM pg_stat_replication;\n-- result\n-[ RECORD 1 ]----+------------------------------\npid              | 595\nusesysid         | 16384\nusename          | requser\napplication_name | walreceiver\nclient_addr      | ::1\nclient_hostname  |\nclient_port      | 49798\nbackend_start    | 2024-08-03 12:15:14.549951+00\nbackend_xmin     |\nstate            | streaming\nsent_lsn         | 0/3000148\nwrite_lsn        | 0/3000148\nflush_lsn        | 0/3000148\nreplay_lsn       | 0/3000148\nwrite_lag        |\nflush_lag        |\nreplay_lag       |\nsync_priority    | 0\nsync_state       | async\nreply_time       | 2024-08-03 12:33:45.648063+00\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5F9E\u7BC0\u9EDE\u7684\u6E2C\u8A66"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql postgres --port=5434\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM pg_stat_wal_receiver;\n-- result\n-[ RECORD 1 ]---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\npid                   | 594\nstatus                | streaming\nreceive_start_lsn     | 0/3000000\nreceive_start_tli     | 1\nwritten_lsn           | 0/3000148\nflushed_lsn           | 0/3000148\nreceived_tli          | 1\nlast_msg_send_time    | 2024-08-03 12:36:45.703365+00\nlast_msg_receipt_time | 2024-08-03 12:36:45.70343+00\nlatest_end_lsn        | 0/3000148\nlatest_end_time       | 2024-08-03 12:15:14.551133+00\nslot_name             | some_slot\nsender_host           | localhost\nsender_port           | 5433\nconninfo              | user=requser passfile=/var/lib/postgresql/.pgpass channel_binding=prefer dbname=replication host=localhost port=5433 fallback_application_name=walreceiver sslmode=prefer sslcompression=0 sslcertmode=allow sslsni=1 ssl_min_protocol_version=TLSv1.2 gssencmode=prefer krbsrvname=postgres gssdelegation=0 target_session_attrs=any load_balance_hosts=disable\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u6211\u5011\u5728\u4E3B\u7BC0\u9EDE\u4E0A\u5275\u5EFA\u4E00\u500B table\uFF0C\u7136\u5F8C\u5728\u5F9E\u7BC0\u9EDE\u4E0A\u67E5\u8A62\uFF0C\u770B\u770B\u662F\u5426\u80FD\u5920\u67E5\u8A62\u5230"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"CREATE TABLE test_table (id SERIAL PRIMARY KEY, name VARCHAR(255));\nINSERT INTO test_table (name) VALUES ('test');\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM test_table;\n-- result\n id | name\n----+------\n  1 | test\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5982\u679C\u5728\u5169\u53F0\u6A5F\u5668\u4E0A\u90FD\u80FD\u5920\u67E5\u8A62\u5230\uFF0C\u4EE3\u8868\u6211\u5011\u7684 streaming replication \u662F\u6210\u529F\u7684"}),"\n",(0,t.jsx)(e.p,{children:"\u6700\u5F8C\u95DC\u9589\u8CC7\u6599\u5EAB"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npg_ctl -D /tmp/primary_db stop\npg_ctl -D /tmp/replica_db stop\n"})}),"\n",(0,t.jsx)(e.h2,{id:"logical-replication",children:"Logical Replication"}),"\n",(0,t.jsxs)(e.p,{children:["logical replication \u662F\u4E00\u7A2E\u900F\u904E\u5C07 SQL \u8A9E\u53E5\u4F86\u9032\u884C\u8907\u88FD\u7684\u65B9\u5F0F\uFF0C\n\u9019\u7A2E\u65B9\u5F0F\u7684\u597D\u8655\u662F\u8CC7\u6599\u8907\u88FD\u7684\u6548\u80FD\u8F03\u9AD8\u9069\u7528\u65BC\u7DB2\u8DEF\u74B0\u5883\u8F03\u5DEE\u7684\u5730\u65B9\uFF0C\u4E14\u53EF\u4EE5\u5728\u4E0D\u540C\u7248\u672C\u4E4B\u9593\u9032\u884C\u8907\u88FD\uFF0C\u540C\u6642\u4E5F\u53EF\u4EE5\u9078\u64C7\u8907\u88FD\u7279\u5B9A\u7684\u8CC7\u6599\uFF0C\n\u7F3A\u9EDE\u662F\u7121\u6CD5\u57F7\u884C\u4E00\u4E9B DDL \u7684\u6307\u4EE4\uFF0C\u50CF\u662F ",(0,t.jsx)(e.code,{children:"CREATE TABLE"})," \u6216\u662F ",(0,t.jsx)(e.code,{children:"ALTER TABLE"})," \u7B49\u7B49\uFF0C\n\u540C\u6642 sequence \u7684\u503C\u9ED8\u8A8D\u4E5F\u4E0D\u6703\u8907\u88FD\uFF0C\u9019\u4EE3\u8868\u5982\u679C\u9700\u8981 failover \u7684\u8A71\uFF0C\u9700\u8981\u53E6\u5916\u8655\u7406 sequence \u7684\u503C"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Logical Replication",src:s(34200).Z+"",width:"1138",height:"563"})}),"\n",(0,t.jsx)(e.p,{children:"\u5275\u5EFA\u8CC7\u6599\u5EAB\u4E26\u4FEE\u6539\u53C3\u6578"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"initdb -D /tmp/publish_db/\ninitdb -D /tmp/subscribe_db/\n\nsudo chown -R postgres:postgres /tmp/publish_db\nsudo chown -R postgres:postgres /tmp/subscribe_db\nsudo -i -u postgres\n\nnano /tmp/publish_db/postgresql.conf\n# set wal_level to logical\n# set port to 5433\n\nnano /tmp/subscribe_db/postgresql.conf\n# set port to 5434\n\nsudo -i -u postgres\npg_ctl -D /tmp/publish_db start\npg_ctl -D /tmp/subscribe_db start\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5275\u5EFA\u597D\u8868\uFF0C\u4E26\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"pg_dump"})," \u4F86\u8907\u88FD\u8CC7\u6599"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql postgres --port=5433\n\nCREATE DATABASE pub;\n\\c pub\nCREATE TABLE test_table (id SERIAL PRIMARY KEY, name VARCHAR(255));\nINSERT INTO test_table (name) VALUES ('test');\n\nexit\npsql postgres --port=5434\nCREATE DATABASE sub;\n\nexit\npg_dump -t test_table -p 5433 -s pub | psql -p 5434 -d sub\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5275\u5EFA publication \u548C subscription"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\n\npsql pub --port=5433\nCREATE PUBLICATION test_publication FOR TABLE test_table;\n\npsql sub --port=5434\nCREATE SUBSCRIPTION test_subscription CONNECTION 'host=localhost port=5433 user=rulerchen dbname=pub' PUBLICATION test_publication;\n# -- (\u9700\u8981\u6539 user)\n\nSELECT * FROM test_table;\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u63A5\u8457\u6211\u5011\u53EF\u4EE5\u900F\u904E ",(0,t.jsx)(e.code,{children:"pg_stat_replication"})," \u4F86\u67E5\u770B replication \u7684\u72C0\u614B\uFF0C\u4E26\u6CE8\u610F lag \u7684\u90E8\u5206"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"write_lag"}),": \u4E3B\u7BC0\u9EDE\u5BEB\u5165 WAL \u7684\u6642\u9593"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"flush_lag"}),": \u4E3B\u7BC0\u9EDE\u5C07 WAL \u5237\u65B0\u5230\u78C1\u76E4\u7684\u6642\u9593"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"replay_lag"}),": \u5F9E\u7BC0\u9EDE\u61C9\u7528 WAL \u7684\u6642\u9593"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM pg_stat_replication;\n-- result\n-[ RECORD 1 ]----+------------------------------\npid              | 222\nusesysid         | 10\nusename          | postgres\napplication_name | test_subscription\nclient_addr      | ::1\nclient_hostname  |\nclient_port      | 36752\nbackend_start    | 2024-08-04 07:23:31.011034+00\nbackend_xmin     |\nstate            | streaming\nsent_lsn         | 0/196EA40\nwrite_lsn        | 0/196EA40\nflush_lsn        | 0/196EA40\nreplay_lsn       | 0/196EA40\nwrite_lag        |\nflush_lag        |\nreplay_lag       |\nsync_priority    | 0\nsync_state       | async\nreply_time       | 2024-08-04 07:41:12.252314+00\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6211\u5011\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u6307\u4EE4\u4F86\u67E5\u770B publication \u548C subscription \u7684\u72C0\u614B"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"\\dRp\n-- result\nList of publications\n-[ RECORD 1 ]----------------\nName       | test_publication\nOwner      | postgres\nAll tables | f\nInserts    | t\nUpdates    | t\nDeletes    | t\nTruncates  | t\nVia root   | f\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"\\dRs\n-- result\nList of subscriptions\n-[ RECORD 1 ]-------------------\nName        | test_subscription\nOwner       | postgres\nEnabled     | t\nPublication | {test_publication}\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6700\u5F8C\u95DC\u9589\u8CC7\u6599\u5EAB"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\nsource ~/.bashrc\npg_ctl -D /tmp/publish_db stop\npg_ctl -D /tmp/subscribe_db stop\n"})}),"\n",(0,t.jsx)(e.h2,{id:"pgbouncer",children:"PgBouncer"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u6B63\u5E38\u7684\u60C5\u6CC1\u4E0B\uFF0CPostgreSQL \u53EF\u4EE5\u5728\u4E00\u79D2\u9418\u8655\u7406\u7D04 350 \u500B transaction\uFF0C\n\u5982\u679C\u8D85\u904E\u7684\u8A71\u5C31\u53EF\u4EE5\u8003\u616E\u4F7F\u7528 connection pool \u4F86\u9032\u884C\u512A\u5316\uFF0C\n\u9019\u6A23\u53EF\u4EE5\u6E1B\u5C11\u6BCF\u6B21\u9023\u63A5\u8CC7\u6599\u5EAB\u6642\u5275\u5EFA process (fork) \u6240\u9700\u8981\u6D88\u8017\u7684\u8CC7\u6E90"}),"\n",(0,t.jsx)(e.p,{children:"PgBouncer \u672C\u8EAB\u6C92\u6709\u652F\u63F4 multi-host\u3001failover \u4EE5\u53CA load balancing\uFF0C\n\u6240\u4EE5\u5982\u679C\u9700\u8981\u9019\u6A23\u7684\u529F\u80FD\uFF0C\u6211\u5011\u9700\u8981\u4F7F\u7528\u5176\u4ED6\u7684\u5DE5\u5177"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"PgBouncer",src:s(39986).Z+"",width:"994",height:"552"})}),"\n",(0,t.jsx)(e.p,{children:"pgbouncer \u5305\u542B\u4E09\u7A2E\u6A21\u5F0F :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"session"}),": \u9ED8\u8A8D\u548C\u6700\u5B89\u5168\u7684\u6A21\u5F0F\uFF0Cclient \u5728\u9023\u63A5\u671F\u9593\uFF0C\u6703\u6301\u7E8C\u4FDD\u6301\u9023\u63A5\uFF0C\u76F4\u5230 session \u7D50\u675F"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"transaction"}),": client \u50C5\u5728 transaction \u671F\u9593\u4FDD\u6301\u8207\u8CC7\u6599\u5EAB\u7684\u9023\u63A5"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"statement"}),": \u6BCF\u500B SQL \u8A9E\u53E5\u57F7\u884C\u5F8C\uFF0C\u9023\u63A5\u5C31\u6703\u8FD4\u56DE\u5230\u6C60\u4E2D"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u4E0B\u4F86\u6211\u5011\u6703\u5B89\u88DD pgbouncer \u4E26\u4E14\u9032\u884C\u7C21\u55AE\u7684\u8A2D\u5B9A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"initdb -D /tmp/pgbouncer_db/\nsudo chown -R postgres:postgres /tmp/pgbouncer_db\n\nsudo -i -u postgres\npg_ctl -D /tmp/pgbouncer_db start\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo apt install pgbouncer\ncd /etc/pgbouncer\nsudo cp pgbouncer.ini pgbouncer.ini.bak # \u5099\u4EFD\u539F\u672C\u7684\u8A2D\u5B9A\nsudo nano pgbouncer.ini\n# set test_db = dbname=postgres host=localhost port=5432 auth_user=postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql -p 5432 postgres\nCREATE USER postgres SUPERUSER;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u555F\u52D5 pgbouncer"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\n/usr/sbin/pgbouncer /etc/pgbouncer/pgbouncer.ini\n# \u8A18\u5F97\u5148\u95DC\u9589 pgbouncer\n# sudo systemctl stop pgbouncer\n\n# adjust min_pool_size\u3001default_pool_size\u3001max_client_conn to appropriate value\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u6211\u5011\u53EF\u4EE5\u900F\u904E pgbench \u4F86\u9032\u884C\u58D3\u529B\u6E2C\u8A66"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo touch /tmp/pgbouncer_db/test.sql\nsudo nano /tmp/pgbouncer_db/test.sql\n# SELECT 1;\n\nsudo -i -u postgres\npg_ctl -D /tmp/pgbouncer_db start\nexit\n\npgbench -i postgres\nsudo chmod 755 /tmp/pgbouncer_db/\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6C92\u6709 pgbouncer \u7684\u60C5\u6CC1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pgbench -c 10 -t 500 -S postgres -C -f /tmp/pgbouncer_db/test.sql -p 5432\n# -- result\npgbench (15.10 (Debian 15.10-0+deb12u1))\nstarting vacuum...end.\ntransaction type: multiple scripts\nscaling factor: 1\nquery mode: simple\nnumber of clients: 10\nnumber of threads: 1\nmaximum number of tries: 1\nnumber of transactions per client: 500\nnumber of transactions actually processed: 5000/5000\nnumber of failed transactions: 0 (0.000%)\nlatency average = 44.289 ms\naverage connection time = 4.395 ms\ntps = 225.789016 (including reconnection times)\nSQL script 1: <builtin: select only>\n - weight: 1 (targets 50.0% of total)\n - 2453 transactions (49.1% of total, tps = 110.772091)\n - number of failed transactions: 0 (0.000%)\n - latency average = 17.399 ms\n - latency stddev = 11.772 ms\nSQL script 2: /tmp/pgbouncer_db/test.sql\n - weight: 1 (targets 50.0% of total)\n - 2547 transactions (50.9% of total, tps = 115.016925)\n - number of failed transactions: 0 (0.000%)\n - latency average = 16.865 ms\n - latency stddev = 11.840 ms\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6709 pgbouncer \u7684\u60C5\u6CC1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npgbench -c 10 -t 500 -S test_db -C -f /tmp/pgbouncer_db/test.sql -p 6432\n# -- result\npgbench (15.10 (Debian 15.10-0+deb12u1))\nstarting vacuum...end.\ntransaction type: multiple scripts\nscaling factor: 1\nquery mode: simple\nnumber of clients: 10\nnumber of threads: 1\nmaximum number of tries: 1\nnumber of transactions per client: 500\nnumber of transactions actually processed: 5000/5000\nnumber of failed transactions: 0 (0.000%)\nlatency average = 5.059 ms\naverage connection time = 0.432 ms\ntps = 1976.638505 (including reconnection times)\nSQL script 1: <builtin: select only>\n - weight: 1 (targets 50.0% of total)\n - 2468 transactions (49.4% of total, tps = 975.668766)\n - number of failed transactions: 0 (0.000%)\n - latency average = 2.538 ms\n - latency stddev = 1.538 ms\nSQL script 2: /tmp/pgbouncer_db/test.sql\n - weight: 1 (targets 50.0% of total)\n - 2532 transactions (50.6% of total, tps = 1000.969739)\n - number of failed transactions: 0 (0.000%)\n - latency average = 2.361 ms\n - latency stddev = 1.460 ms\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u53EF\u4EE5\u89C0\u5BDF\u5230 tps \u6709\u660E\u986F\u7684\u63D0\u5347\uFF0C\u5F9E 225 \u63D0\u5347\u5230 1976\u3002"}),"\n",(0,t.jsx)(e.p,{children:"pgbench \u7684\u53C3\u6578\u8AAA\u660E\u5982\u4E0B :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-i"}),": \u521D\u59CB\u5316\u8CC7\u6599\u5EAB"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-c"}),": \u540C\u6642\u57F7\u884C\u7684 client \u6578\u91CF"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-t"}),": \u6BCF\u500B client \u57F7\u884C\u7684 transaction \u6578\u91CF"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-S"}),": \u4F7F\u7528 simple query mode"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-C"}),": \u70BA\u6BCF\u500B transaction \u5275\u5EFA\u4E00\u500B\u65B0\u7684\u9023\u63A5"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-f"}),": \u6307\u5B9A\u8981\u57F7\u884C\u7684 SQL \u6A94\u6848"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-p"}),": \u6307\u5B9A port"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"partition",children:"Partition"}),"\n",(0,t.jsx)(e.p,{children:"\u5C0D\u65BC\u8CC7\u6599\u91CF\u5927\u7684\u8868\uFF0C\u4E0D\u7BA1\u662F\u67E5\u8A62\u6216\u662F vacuum \u90FD\u6703\u9700\u8981\u8F03\u9577\u7684\u6642\u9593\uFF0C\u9019\u6642\u5019\u6211\u5011\u53EF\u4EE5\u8003\u616E\u5C07\u8868\u9032\u884C\u5206\u5272\u63D0\u5347\u6548\u80FD"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u65B0\u7248\u7684 PostgreSQL \u4E2D\uFF0Cpartition \u591A\u4F7F\u7528 declarative \u7684\u65B9\u5F0F\u4F86\u9032\u884C\u5206\u5272\uFF0C\u800C\u4E0D\u662F inheritance \u7684\u65B9\u5F0F\u3002"}),"\n",(0,t.jsx)(e.p,{children:"partition \u7684\u65B9\u6CD5\u5927\u81F4\u6709\u4EE5\u4E0B\u56DB\u7A2E :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Range Partition"}),": \u4F9D\u7167\u7BC4\u570D\u4F86\u9032\u884C\u5206\u5272\uFF0C\u50CF\u662F\u6642\u9593\u3001\u6578\u503C\u7B49\u7B49"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"List Partition"}),": \u4F9D\u7167\u7279\u5B9A\u7684\u503C\u4F86\u9032\u884C\u5206\u5272"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Hash Partition"}),": \u4F9D\u7167 hash \u503C\u4F86\u9032\u884C\u5206\u5272"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Composite Partition"}),": \u7D50\u5408\u4EE5\u4E0A\u5169\u7A2E\u6216\u591A\u7A2E\u65B9\u5F0F\u4F86\u9032\u884C\u5206\u5272"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npg_ctl -D /tmp/primary_db start\npsql --port=5433 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"CREATE TABLE customers (\n    id INT,\n    name TEXT,\n    age NUMERIC\n) PARTITION BY RANGE (age);\n\nCREATE TABLE customers_young PARTITION OF customers FOR VALUES FROM (MINVALUE) TO (25);\nCREATE TABLE customers_adult PARTITION OF customers FOR VALUES FROM (25) TO (65);\nCREATE TABLE customers_old PARTITION OF customers FOR VALUES FROM (65) TO (MAXVALUE);\n\nINSERT INTO customers (id, name, age) VALUES (1, 'John Doe', 20), (2, 'Jane Doe', 30), (3, 'John Smith', 60), (4, 'Jane Smith', 70);\n\nSELECT tableoid::regclass, * FROM customers;\n-- result\n    tableoid     | id |    name    | age\n-----------------+----+------------+-----\n customers_young |  1 | John Doe   |  20\n customers_adult |  2 | Jane Doe   |  30\n customers_adult |  3 | John Smith |  60\n customers_old   |  4 | Jane Smith |  70\n(4 rows)\n"})}),"\n",(0,t.jsx)(e.h2,{id:"sharding",children:"Sharding"}),"\n",(0,t.jsx)(e.p,{children:"sharding \u662F\u5C07\u8CC7\u6599\u5206\u5272\u5230\u591A\u500B\u8CC7\u6599\u5EAB\uFF0C\u4EE5\u6E1B\u8F15\u55AE\u500B\u8CC7\u6599\u5EAB\u7684\u8CA0\u64D4\u3002"}),"\n",(0,t.jsx)(e.p,{children:"sharding \u7684\u95DC\u9375\u5728\u65BC\u5982\u4F55\u9078\u64C7 sharding key\uFF0C\n\u6211\u5011\u9700\u8981\u4F9D\u64DA\u696D\u52D9\u5834\u666F\u4F86\u9078\u64C7\u5408\u9069\u7684 sharding key\uFF0C\n\u4F86\u4FDD\u8B49\u6211\u5011\u7684\u67E5\u8A62\u6216\u5BEB\u5165\u76E1\u91CF\u843D\u5728\u540C\u4E00\u500B\u8CC7\u6599\u5EAB\u4E2D\u3002"}),"\n",(0,t.jsx)(e.h2,{id:"postgresql-high-availability",children:"PostgreSQL High Availability"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u751F\u7522\u74B0\u5883\u4E2D\uFF0C\u6211\u5011\u9700\u8981\u8003\u616E\u5728\u5404\u7A2E\u4E0D\u540C\u7684\u74B0\u5883\u4E0B\u90FD\u80FD\u7A69\u5B9A\u5730\u63D0\u4F9B\u670D\u52D9\uFF0C\u9019\u6642\u5019\u6211\u5011\u5C31\u9700\u8981\u8003\u616E\u9AD8\u53EF\u7528\u6027\u7684\u554F\u984C"}),"\n",(0,t.jsx)(e.p,{children:"HA \u4E3B\u8981\u5206\u70BA\u4E09\u500B\u6B65\u9A5F :"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"replication : \u4E3B\u7BC0\u9EDE\u5C07\u8CC7\u6599\u8907\u88FD\u5230\u5F9E\u7BC0\u9EDE\uFF0C\u4EE5\u4FDD\u8B49\u8CC7\u6599\u7684\u4E00\u81F4\u6027"}),"\n",(0,t.jsx)(e.li,{children:"failover : \u7576\u4E3B\u7BC0\u9EDE\u6545\u969C\u6642\uFF0C\u5F9E\u7BC0\u9EDE\u81EA\u52D5\u5347\u7D1A\u70BA\u4E3B\u7BC0\u9EDE"}),"\n"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pg_ctl promote"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pgpool II"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"PAF"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Patroni"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Repmgr"})}),"\n"]}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsx)(e.li,{children:"failback : \u7576\u4E3B\u7BC0\u9EDE\u6062\u5FA9\u6B63\u5E38\u6642\uFF0C\u5F9E\u7BC0\u9EDE\u964D\u7D1A\u70BA\u5F9E\u7BC0\u9EDE"}),"\n"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pg rewind"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pgpool II"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"PAF"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Patroni"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Repmgr"})}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u8655\u7406 HA \u4E4B\u524D\u8981\u5148\u4E86\u89E3\u4EE5\u4E0B\u5E7E\u500B\u554F\u984C :"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u8CC7\u6599\u7684\u91CD\u8981\u6027"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(94186).Z+"",width:"1150",height:"600"})}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"RTO (Recovery Time Objective) && RPO (Recovery Point Objective)"}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.img,{alt:"HA Problem",src:s(96611).Z+"",width:"903",height:"538"}),"\n",(0,t.jsx)(e.img,{alt:"HA Problem",src:s(98992).Z+"",width:"834",height:"548"})]}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsx)(e.li,{children:"Auto failover \u7684\u6A5F\u5236"}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.img,{alt:"HA Problem",src:s(87886).Z+"",width:"1124",height:"552"}),"\n",(0,t.jsx)(e.img,{alt:"HA Problem",src:s(27829).Z+"",width:"1084",height:"627"})]}),"\n",(0,t.jsxs)(e.ol,{start:"4",children:["\n",(0,t.jsx)(e.li,{children:"Cross-center replication"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(53441).Z+"",width:"1144",height:"575"})}),"\n",(0,t.jsxs)(e.ol,{start:"5",children:["\n",(0,t.jsx)(e.li,{children:"Do we open replication for read"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(68960).Z+"",width:"921",height:"572"})}),"\n",(0,t.jsx)(e.p,{children:"\u4E00\u500B\u57FA\u672C\u7684\u67B6\u69CB\u5716\u5927\u81F4\u5982\u4E0B :"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(7519).Z+"",width:"1086",height:"630"})}),"\n",(0,t.jsx)(e.h2,{id:"pgpool-ii",children:"Pgpool II"}),"\n",(0,t.jsx)(e.p,{children:"pgpool \u662F\u4E00\u500B\u4F4D\u5728\u8CC7\u6599\u5EAB\u8DDF\u5BA2\u6236\u7AEF\u7684 middleware\uFF0C\n\u53EF\u4EE5\u63D0\u4F9B load balancing\u3001failover\u3001connection pooling \u7B49\u529F\u80FD\uFF0C\n\u662F\u4E00\u500B\u5F88\u597D\u7684 HA \u89E3\u6C7A\u65B9\u6848"}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u4E0B\u4F86\u6703\u793A\u7BC4 pgpool \u7684\u7C21\u6613\u8A2D\u5B9A :"}),"\n",(0,t.jsx)(e.p,{children:"\u9996\u5148\u9700\u8981\u8A2D\u5B9A streaming application\uFF0C\u8DDF\u4E4B\u524D\u7684\u8A2D\u5B9A\u76F8\u540C\uFF0C\u4E26\u5B89\u88DD pgpool"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npg_ctl -D /tmp/primary_db start\npg_ctl -D /tmp/replica_db start\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u4E0B\u4F86\u6211\u5011\u6703\u5148\u8A2D\u5B9A load balance \u7684\u90E8\u5206\uFF0C\u5C07 SELECT \u7684 query \u5C0E\u5411 replica\uFF0C\u5176\u4ED6\u7684 query \u5C0E\u5411 primary"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo apt install pgpool2\n\ncd /etc/pgpool2\nsudo nano pgpool.conf\n# set listen_addresses to '*'\n\n# set backend_hostname0 to localhost\n# set backend_port0 to 5433\n# set backend_weight0 to 0\n# set backend_data_directory0 to '/tmp/primary_db/'\n\n# set backend_hostname1 to localhost\n# set backend_port1 to 5434\n# set backend_weight1 to 1\n# set backend_data_directory1 to '/tmp/replica_db/'\n\n# set log_statement to 'on'\n# set log_per_node_statement to 'on'\n\n# set sr_check_user to 'requser'\n\n# set health_check_period to 10\n# set health_check_user to 'requser'\n\nsudo systemctl stop pgpool2\nsudo /usr/sbin/pgpool -n -f /etc/pgpool2/pgpool.conf\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u5617\u8A66\u9023\u7DDA"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql -p 9999 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"CREATE TABLE table1 (id SERIAL PRIMARY KEY, name VARCHAR(255));\nINSERT INTO table1 (name) VALUES ('test');\nSELECT * FROM table1;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5728 pgpool \u7684 log \u4E2D\u6211\u5011\u53EF\u4EE5\u770B\u5230 query \u662F\u5982\u4F55\u88AB\u5C0E\u5411\u7684"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"2024-12-27 02:58:32.383: psql pid 40763: LOG:  DB node id: 0 backend pid: 40797 statement: CREATE TABLE table1 (id SERIAL PRIMARY KEY, name VARCHAR(255));\n2024-12-27 02:58:35.931: psql pid 40763: LOG:  DB node id: 0 backend pid: 40797 statement: INSERT INTO table1 (name) VALUES ('test');\n2024-12-27 02:59:00.839: psql pid 40763: LOG:  DB node id: 1 backend pid: 40798 statement: SELECT * FROM table1;\n"})}),"\n",(0,t.jsx)(e.p,{children:"SELECT \u88AB\u5C0E\u5411\u5230 node 1\uFF0C\u5176\u4ED6\u7684 query \u5247\u88AB\u5C0E\u5411\u5230 node 0"}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u6211\u5011\u6703\u5229\u7528 pgpool \u4F86\u5BE6\u73FE HA :"}),"\n",(0,t.jsxs)(e.p,{children:["\u9996\u5148\u6211\u5011\u6703\u5148\u4FEE\u6539 primary \u7684\u8A2D\u5B9A\uFF0C\u5C07 synchronous \u4FEE\u6539\u70BA remote_apply\uFF0C\u4E26\u4E14\u8A2D\u5B9A wal_log_hints \u70BA on (\u65B9\u4FBF\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"pg_rewind"})," \u4F86\u9032\u884C failback)"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /tmp/primary_db/postgresql.conf\n\n# set synchronous_commit to remote_apply\n# set synchronous_standby_names to '*'\n# set wal_log_hints to on\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db restart\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u65B0\u589E\u4E00\u500B\u6A94\u6848\u4F86\u7576\u4F5C failover \u7684 script"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /tmp/failover.sh\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",metastring:'title="/tmp/failover.sh"',children:"#! /bin/sh\nfailed_node=$1\ntrigger_file=$2\n\nif [$failed_node = 1];\nthen exit 0;\nfi\n\ntouch $trigger_file\nexit 0;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u4FEE\u6539 pgpool \u7684\u8A2D\u5B9A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /etc/pgpool2/pgpool.conf\n\n# set failover_command to '/tmp/failover.sh %d /tmp/replica_db/down.trg'\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u4FEE\u6539 replica \u7684\u8A2D\u5B9A"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /tmp/replica_db/postgresql.conf\n\n# set promote_trigger_file to '/tmp/replica_db/down.trg'\n\nsudo -i -u postgres\npg_ctl -D /tmp/replica_db restart\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u4F86\u505A\u6E2C\u8A66\uFF0C\u6211\u5011\u6703\u555F\u52D5 pgpool \u4E26\u628A primary_db \u95DC\u9589\u4F86\u6E2C\u8A66\u7D50\u679C"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo systemctl stop pgpool2\nsudo chmod +x /tmp/failover.sh\nsudo /usr/sbin/pgpool -n -f /etc/pgpool2/pgpool.conf\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db stop\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u505C\u6B62 primary \u4E4B\u5F8C\uFF0C\u6211\u5011\u53EF\u4EE5\u770B\u5230 pgpool \u7684 log \u4E2D\u6709 failover \u7684\u8A0A\u606F"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"2024-12-27 14:32:55.722: main pid 51351: LOG:  execute command: /tmp/failover.sh 0 /tmp/replica_db/down.trg\n2024-12-27 14:32:55.750: main pid 51351: LOG:  find_primary_node_repeatedly: waiting for finding a primary node\n2024-12-27 14:32:55.755: main pid 51351: LOG:  find_primary_node: standby node is 1\n2024-12-27 14:32:56.760: main pid 51351: LOG:  find_primary_node: standby node is 1\n2024-12-27 14:32:57.765: main pid 51351: LOG:  find_primary_node: primary node is 1\n2024-12-27 14:32:57.766: main pid 51351: LOG:  failover: set new primary node: 1\n2024-12-27 14:32:57.766: main pid 51351: LOG:  failover: set new main node: 1\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63A5\u8457\u6211\u5011\u53EF\u4EE5\u5617\u8A66\u9023\u7DDA\u5230 pgpool \u4F86\u67E5\u770B\u662F\u5426\u771F\u7684\u9023\u63A5\u5230\u4E86 replica"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql -p 9999 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SHOW port;\n# -- result\n port\n------\n 5434\n(1 row)\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u9019\u6A23\u4EE3\u8868\u6211\u5011\u6210\u529F\u9023\u5230\u4E86\u7B2C\u4E8C\u500B\u7BC0\u9EDE\uFF0C\u5B8C\u6210\u4E86 failover \u7684\u6E2C\u8A66"}),"\n",(0,t.jsxs)(e.p,{children:["\u6700\u5F8C\uFF0C\u7576\u6211\u5011\u7684\u6545\u969C\u7BC0\u9EDE\u6062\u5FA9\u6B63\u5E38\u6642\uFF0C\u6211\u5011\u5C31\u53EF\u4EE5\u4F7F\u7528 ",(0,t.jsx)(e.code,{children:"pg_rewind"})," \u4F86\u9032\u884C failback"]}),"\n",(0,t.jsx)(e.h2,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.udemy.com/course/postgresql-replication-high-availability-ha-and-scalability",children:"PostgreSQL Replication, High Availability HA and Scalability"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.interdb.jp/pg/index.html",children:"The Internals of PostgreSQL"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.youtube.com/watch?v=a_lW1Hz-IPU",children:"Scaling PostgreSQL with Google Cloud and HAProxy"})}),"\n"]})]})}function p(n={}){let{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},34200:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-1-e2174585abf64dcc3e3f553d2f5e701a.png"},88833:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-10-6a666c38c2d3febb18a300499825faab.png"},27829:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-11-6065b5f7679677d4f63bd6c496636501.png"},7519:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-12-42d8d39af659e187ed8625550f7b8c80.png"},39986:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-2-ea84074f202988d0af69359a84ceb2b8.png"},94186:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-4-43ddab330de03fd9be5d3839420acb1a.png"},87886:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-5-188a8cfcf12935273ef3f49331db134a.png"},96611:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-6-c45c5c7d2f3ce27138d4d9fd9596a702.png"},98992:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-7-cf637ecc909fb1861929e56a3baffe4c.png"},53441:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-8-30da38745b6cb7a9f25fa250d4453c6b.png"},68960:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-9-bbf01b748da17a187599839ada5b5bbd.png"},19069:function(n,e,s){s.d(e,{Z:()=>i});let i=s.p+"assets/images/image-0c0bd50adc5761f6c79e1bb1a0ccff47.png"},50065:function(n,e,s){s.d(e,{Z:()=>a,a:()=>r});var i=s(67294);let t={},l=i.createContext(t);function r(n){let e=i.useContext(l);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);