"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1411],{2309:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var s=a(5893),r=a(1151);const t={title:"[K8s] Kubernetes Storage",sidebar_position:"50",description:"Kubernetes Storage",keywords:["kubernetes","Storage"]},i=void 0,l={id:"Kubernetes/Storage",title:"[K8s] Kubernetes Storage",description:"Kubernetes Storage",source:"@site/docs/Kubernetes/Storage.mdx",sourceDirName:"Kubernetes",slug:"/Kubernetes/Storage",permalink:"/RulerChen-Website/docs/Kubernetes/Storage",draft:!1,unlisted:!1,editUrl:"https://github.com/RulerChen/RulerChen-Website/tree/main/docs/Kubernetes/Storage.mdx",tags:[],version:"current",lastUpdatedAt:1706183872,formattedLastUpdatedAt:"2024\u5e741\u670825\u65e5",sidebarPosition:50,frontMatter:{title:"[K8s] Kubernetes Storage",sidebar_position:50,description:"Kubernetes Storage",keywords:["kubernetes","Storage"]},sidebar:"tutorialSidebar",previous:{title:"[K8s] Kubernetes Network",permalink:"/RulerChen-Website/docs/Kubernetes/Network"},next:{title:"[K8s] Kubernetes Cluster",permalink:"/RulerChen-Website/docs/Kubernetes/Cluster"}},o={},c=[{value:"Storage Overview",id:"storage-overview",level:2},{value:"EmptyDir",id:"emptydir",level:2},{value:"HostPath",id:"hostpath",level:2},{value:"PV &amp; PVC",id:"pv--pvc",level:2},{value:"Workflow",id:"workflow",level:3},{value:"Storage Lifecycle",id:"storage-lifecycle",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Secrets",id:"secrets",level:2},{value:"Create secret",id:"create-secret",level:3},{value:"Example",id:"example",level:3},{value:"ConfigMap",id:"configmap",level:2},{value:"Create ConfigMap",id:"create-configmap",level:3},{value:"Example",id:"example-1",level:3}];function m(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"storage-overview",children:"Storage Overview"}),"\n",(0,s.jsx)(n.p,{children:"\u8ddf Docker Volumn \u4e00\u6a23\uff0cKubernetes \u4e5f\u5c07 Storage \u5206\u6210\u5169\u7a2e\uff1a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Persistent Volumn: \u6703\u4e00\u76f4\u5b58\u5728\uff0c\u4e0d\u6703\u56e0\u70ba Pod \u88ab\u522a\u9664\u800c\u6d88\u5931\uff0c\u4e0d\u8207\u4efb\u4f55 Pod \u7d81\u5b9a"}),"\n",(0,s.jsx)(n.li,{children:"Volumn: \u70ba\u4e86\u5728\u4e00\u500b Pod \u4e2d\u7684 Container \u4e4b\u9593\u5171\u4eab\u8cc7\u6599\uff0c\u751f\u547d\u9031\u671f\u8207 Pod \u76f8\u540c"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"emptydir",children:"EmptyDir"}),"\n",(0,s.jsx)(n.p,{children:"EmptyDir \u662f\u4e00\u500b\u7a7a\u7684\u76ee\u9304\uff0c\u751f\u547d\u9031\u671f\u8207 Pod \u76f8\u540c\uff0c\u7576 Pod \u88ab\u522a\u9664\u6642\uff0cEmptyDir \u4e5f\u6703\u88ab\u522a\u9664\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: multicontainer-pod\nspec:\n  containers:\n    - name: producer\n      image: busybox\n      command:\n        [\n          'sh',\n          '-c',\n          'while true; do echo $(hostname) $(date) >> /var/log/index.html; sleep 10; done'\n        ]\n      volumeMounts:\n        - name: webcontent\n          mountPath: /var/log\n    - name: consumer\n      image: nginx\n      ports:\n        - containerPort: 80\n      volumeMounts:\n        - name: webcontent\n          mountPath: /usr/share/nginx/html\n  volumes:\n    - name: webcontent\n      emptyDir: {}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"hostpath",children:"HostPath"}),"\n",(0,s.jsx)(n.p,{children:"HostPath \u662f\u4e00\u500b\u76ee\u9304\uff0c\u751f\u547d\u9031\u671f\u8207\u4e3b\u6a5f\u76f8\u540c\uff0c\u53ef\u4ee5\u639b\u8f09\u4e3b\u6a5f\u4e0a\u7684\u6a94\u6848\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: multicontainer-pod\nspec:\n  containers:\n    - name: producer\n      image: busybox\n      command:\n        [\n          'sh',\n          '-c',\n          'while true; do echo $(hostname) $(date) >> /var/log/index.html; sleep 10; done'\n        ]\n      volumeMounts:\n        - name: webcontent\n          mountPath: /var/log\n    - name: consumer\n      image: nginx\n      ports:\n        - containerPort: 80\n      volumeMounts:\n        - name: webcontent\n          mountPath: /usr/share/nginx/html\n  volumes:\n    - name: webcontent\n      hostPath:\n        path: /tmp\n        type: Directory\n"})}),"\n",(0,s.jsx)(n.h2,{id:"pv--pvc",children:"PV & PVC"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"image",src:a(1536).Z+"",width:"1024",height:"607"})}),"\n",(0,s.jsx)(n.p,{children:"PV(Persistent Volumn) \u662f\u4e00\u584a\u7531\u7ba1\u7406\u54e1\u63d0\u4f9b\u7684\u5132\u5b58\u7a7a\u9593(nfs\u3001hostpath\u3001cloud)\u3002"}),"\n",(0,s.jsx)(n.p,{children:"PVC(Persistent Volumn Claim) \u662f\u4f7f\u7528\u8005\u5411\u7ba1\u7406\u54e1\u7533\u8acb\u7684\u5132\u5b58\u7a7a\u9593\uff0cPVC \u53ef\u4ee5\u8acb\u6c42\u5132\u5b58\u5927\u5c0f\u548c\u5b58\u53d6\u6a21\u5f0f\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"workflow",children:"Workflow"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7ba1\u7406\u54e1\u5275\u5efa PV"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-nfs\nspec:\n  capacity:\n    storage: 4Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  nfs:\n    server: 192.168.56.20\n    path: '/export/volumes/pod'\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4f7f\u7528\u8005\u5275\u5efa PVC"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-nfs\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Gi\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5728 Pod \u4e2d\u5b9a\u7fa9 Volumn"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      volumes:\n        - name: webcontent\n          persistentVolumeClaim:\n            claimName: pvc-nfs\n      containers:\n        - image: nginx\n          name: nginx\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: webcontent\n              mountPath: '/usr/share/nginx/html/web-app'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"storage-lifecycle",children:"Storage Lifecycle"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Binding: PVC \u8207 PV \u7d81\u5b9a"}),"\n",(0,s.jsx)(n.li,{children:"Using: Pod \u4f7f\u7528 PVC"}),"\n",(0,s.jsx)(n.li,{children:"Reclaim: \u522a\u9664 PVC\uff0cPV \u57fa\u65bc reclaim policy \u6c7a\u5b9a\u662f\u522a\u9664\u7a7a\u9593(deleted)\u6216\u662f\u4fdd\u7559\u7a7a\u9593(retained\uff0c\u8cc7\u6599\u4fdd\u7559\u4f46\u72c0\u614b\u8b8a\u6210 Released\uff0c\u9700\u8981\u624b\u52d5\u6e05\u9664)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsx)(n.p,{children:"\u6211\u5011\u6709\u4e09\u7a2e\u65b9\u5f0f\u4f86\u50b3\u905e\u74b0\u5883\u8b8a\u6578\u7d66 Pod\uff0c\u4e00\u65e6 Pod \u5efa\u7acb\uff0c\u74b0\u5883\u8b8a\u6578\u5c31\u4e0d\u80fd\u4fee\u6539\u3002"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"command line arguments"}),"\n",(0,s.jsx)(n.li,{children:"environment variables"}),"\n",(0,s.jsx)(n.li,{children:"configMap"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-env\nspec:\n  containers:\n    - name: producer\n      image: busybox\n      command: ['sh', '-c', 'while true; do echo $NAME >> /tmp/index.html; sleep 10; done']\n      env:\n        - name: NAME\n          value: Hello World\n"})}),"\n",(0,s.jsx)(n.h2,{id:"secrets",children:"Secrets"}),"\n",(0,s.jsx)(n.p,{children:"secret \u53ef\u4ee5\u5c07\u654f\u611f\u8cc7\u6599\u4ee5\u7269\u4ef6\u7684\u65b9\u5f0f\u50b3\u7d66 Pod\uff0c\n\u5e38\u7528\u65bc\u50b3\u905e\u6191\u8b49\u3001\u5bc6\u78bc\u7b49\u654f\u611f\u8cc7\u6599\u3002"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4f7f\u7528 base64 \u7de8\u78bc"}),"\n",(0,s.jsx)(n.li,{children:"\u53ef\u4ee5\u8a2d\u7f6e\u52a0\u5bc6"}),"\n",(0,s.jsx)(n.li,{children:"\u5b58\u5728 etcd \u4e2d"}),"\n",(0,s.jsx)(n.li,{children:"\u4ee5 namespace \u5340\u5206"}),"\n",(0,s.jsx)(n.li,{children:"\u5982\u679c\u7121\u6cd5\u8a2a\u554f\u5230 secret\uff0cPod \u6703\u88ab\u62d2\u7d55"}),"\n",(0,s.jsx)(n.li,{children:"\u53ef\u4ee5\u8a2d\u5b9a\u53ef\u4fee\u6539\u6216\u4e0d\u53ef\u4fee\u6539"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"create-secret",children:"Create secret"}),"\n",(0,s.jsx)(n.p,{children:"\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 kubectl \u5efa\u7acb secret"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl create secret generic mysql-secret \\\n  --from-literal=MYSQL_ROOT_PASSWORD=root \\\n  --from-literal=MYSQL_USER=demo \\\n  --from-literal=MYSQL_PASSWORD=demo\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u5982\u679c\u8981\u4f7f\u7528 yaml \u6a94\u6848\u4f86\u5efa\u7acb secret\uff0c\u9700\u8981\u5c07\u654f\u611f\u8cc7\u6599\u5148\u9032\u884c base64 \u7de8\u78bc\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo demo | base64 # ZGVtbw==\necho ZGVtbw== | base64 --decode # demo\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Secret\nmetadata:\n  name: mysql-secret\ntype: Opaque\ndata:\n  MYSQL_PASSWORD: ZGVtbw==\n  MYSQL_ROOT_PASSWORD: cm9vdA==\n  MYSQL_USER: ZGVtbw==\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u6216\u662f\u4f7f\u7528 config file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\ntype: Opaque\nstringData:\n  config.yaml: |\n    MYSQL_ROOT_PASSWORD: root\n    MYSQL_PASSWORD: demo\n    MYSQL_USER: demo\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: mysql\nspec:\n  containers:\n    - name: mysql\n      image: mysql:8.0\n      env:\n        - name: MYSQL_ROOT_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: mysql-secret\n              key: MYSQL_ROOT_PASSWORD\n        - name: MYSQL_USER\n          valueFrom:\n            secretKeyRef:\n              name: mysql-secret\n              key: MYSQL_USER\n        - name: MYSQL_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: mysql-secret\n              key: MYSQL_PASSWORD\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u6216\u662f\u6bd4\u8f03\u7c21\u6f54\u7684\u5beb\u6cd5"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: mysql\nspec:\n  containers:\n    - name: mysql\n      image: mysql:8.0\n      envFrom:\n        - secretRef:\n            name: mysql-secret\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u4e5f\u53ef\u4ee5\u653e\u5728 volume \u4e2d"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-env\nspec:\n  volumes:\n    - name: appconfig\n      secret:\n        secretName: mysql-secret\n  containers:\n    - name: busybox\n      image: busybox\n      command: ['sh', '-c', 'while true; do echo $(date) >> /tmp/index.html; sleep 10; done']\n      volumeMounts:\n        - name: appconfig\n          mountPath: '/etc/appconfig'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configmap",children:"ConfigMap"}),"\n",(0,s.jsx)(n.p,{children:"ConfigMap \u53ef\u4ee5\u7528\u4f86\u5c07\u975e\u6a5f\u5bc6\u6027\u7684\u8cc7\u6599\u4fdd\u5b58\u5230\u9375\u503c\u5c0d\u4e2d\uff0c\u7528\u6cd5\u5927\u81f4\u4e0a\u8ddf secret \u4e00\u6a23\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"create-configmap",children:"Create ConfigMap"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl create configmap appconfig \\\n  --from-literal=MYSQL_ROOT_PASSWORD=root \\\n  --from-literal=MYSQL_USER=demo \\\n  --from-literal=MYSQL_PASSWORD=demo\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: appconfig\ndata:\n  MYSQL_ROOT_PASSWORD: root\n  MYSQL_USER: demo\n  MYSQL_PASSWORD: demo\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: mysql\nspec:\n  containers:\n    - name: mysql\n      image: mysql:8.0\n      env:\n        - name: MYSQL_ROOT_PASSWORD\n          valueFrom:\n            configMapKeyRef:\n              name: appconfig\n              key: MYSQL_ROOT_PASSWORD\n        - name: MYSQL_USER\n          valueFrom:\n            configMapKeyRef:\n              name: appconfig\n              key: MYSQL_USER\n        - name: MYSQL_PASSWORD\n          valueFrom:\n            configMapKeyRef:\n              name: appconfig\n              key: MYSQL_PASSWORD\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u6216\u662f\u6bd4\u8f03\u7c21\u6f54\u7684\u5beb\u6cd5"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: mysql\nspec:\n  containers:\n    - name: mysql\n      image: mysql:8.0\n      envFrom:\n        - configMapRef:\n            name: appconfig\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u4e5f\u53ef\u4ee5\u653e\u5728 volume \u4e2d"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-env\nspec:\n  volumes:\n    - name: appconfig\n      configMap:\n        name: appconfig\n  containers:\n    - name: busybox\n      image: busybox\n      command: ['sh', '-c', 'while true; do echo $(date) >> /tmp/index.html; sleep 10; done']\n      volumeMounts:\n        - name: appconfig\n          mountPath: '/etc/appconfig'\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},1536:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/images/2-64891b3709945863f775213060c2876b.png"},1151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>i});var s=a(7294);const r={},t=s.createContext(r);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);