"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[338],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=u(n),d=i,b=l["".concat(p,".").concat(d)]||l[d]||f[d]||a;return n?r.createElement(b,o(o({ref:t},c),{},{components:n})):r.createElement(b,o({ref:t},c))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[l]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3904:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const a={title:"\u4f75\u67e5\u96c6(Disjoint Set)",description:"\u4ecb\u7d39\u4f75\u67e5\u96c6\u7684\u57fa\u672c\u4ecb\u9762\u8207\u5be6\u4f5c",keywords:["Disjoint set","Union find","\u4f75\u67e5\u96c6","\u4e26\u67e5\u96c6"],sidebar_position:1},o="\u4f75\u67e5\u96c6(Disjoint Set)",s={unversionedId:"Data Structure/Disjoint Set",id:"Data Structure/Disjoint Set",title:"\u4f75\u67e5\u96c6(Disjoint Set)",description:"\u4ecb\u7d39\u4f75\u67e5\u96c6\u7684\u57fa\u672c\u4ecb\u9762\u8207\u5be6\u4f5c",source:"@site/docs/Data Structure/Disjoint Set.md",sourceDirName:"Data Structure",slug:"/Data Structure/Disjoint Set",permalink:"/RulerChen-Website/docs/Data Structure/Disjoint Set",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\u4f75\u67e5\u96c6(Disjoint Set)",description:"\u4ecb\u7d39\u4f75\u67e5\u96c6\u7684\u57fa\u672c\u4ecb\u9762\u8207\u5be6\u4f5c",keywords:["Disjoint set","Union find","\u4f75\u67e5\u96c6","\u4e26\u67e5\u96c6"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Data Structure",permalink:"/RulerChen-Website/docs/category/data-structure"}},p={},u=[{value:"\u4e00\u3001\u7c21\u4ecb",id:"\u4e00\u7c21\u4ecb",level:2}],c={toc:u},l="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(l,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u4f75\u67e5\u96c6disjoint-set"},"\u4f75\u67e5\u96c6(Disjoint Set)"),(0,i.kt)("h2",{id:"\u4e00\u7c21\u4ecb"},"\u4e00\u3001\u7c21\u4ecb"),(0,i.kt)("p",null,"Disjoint Set \u672c\u8eab\u5c31\u662f\u4e00\u7a2e Set\uff0c\u8868\u793a\u4e86\u6bcf\u7d44 Set \u90fd\u662f\u4e92\u65a5\u7684\uff0c\u6bd4\u5982 A={1, 2}\u3001B={3, 4}\uff0c\n\u5247 A \u548c B \u5373\u70ba Disjoint Set\uff0c\u5728\u6700\u5dee\u7684\u60c5\u6cc1\u4e0b\u6703\u9000\u5316\u6210\u934a\u8868\uff0c\u56e0\u6b64\u6211\u5011\u8981\u63a1\u53d6\u4ee5\u4e0b\u5e7e\u7a2e\u65b9\u6cd5\u4f86\u907f\u514d\u3002"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Path Compression : \u5c07\u8d70\u904e\u7684\u7bc0\u9ede\u90fd\u6307\u5411\u7236\u7bc0\u9ede\uff0c\u6211\u5011\u53ef\u4ee5\u7528\u905e\u8ff4\u4f86\u5b8c\u6210"),(0,i.kt)("li",{parentName:"ol"},"Union by rank : \u5c07 rank \u6bd4\u8f03\u5c0f\u7684 set \u52a0\u5165 rank \u6bd4\u8f03\u5927\u7684 set \u88e1\u9762")),(0,i.kt)("p",null,"\u900f\u904e\u4ee5\u4e0a\u9019\u5169\u7a2e\u65b9\u6cd5\u4f86\u964d\u4f4e Disjoint Set \u7684 find \u548c union \u8907\u96dc\u5ea6\u5230 O(1)\uff0c\u800c\u5efa\u69cb\u7684\u8907\u96dc\u5ea6\u5247\u70ba O(n)\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Disjoint Set.cpp" showLineNumbers=true',title:'"Disjoint','Set.cpp"':!0,showLineNumbers:"true"},"class DisjointSet {\n   public:\n    // \u8f38\u5165\u5927\u5c0f\n    DisjointSet(int n) {\n        rank.resize(n, 0);\n        parent.resize(n, 0);\n\n        for (int i = 0; i < n; ++i) {\n            parent[i] = i;\n        }\n    }\n    // \u8f38\u5165\u8981\u627e\u7684\u6578\u5b57\uff0c return parent \u4e26\u505a path compression\n    int find(int n) {\n        if (n == parent[n]) {\n            return n;\n        }\n        return parent[n] = find(parent[n]);\n    }\n    // union by rank\uff0c\u7d50\u5408\u5169\u500b set\n    // \u5982\u679c\u6210\u529f return true\uff0c\u5982\u679c\u672c\u4f86\u5c31\u5728\u4e00\u500b parent \u4e0b\u5c31 return false\n    bool unionSet(int a, int b) {\n        int parent_a = find(a);\n        int parent_b = find(b);\n        if (parent_a == parent_b) return false;\n\n        if (rank[parent_a] > rank[parent_b]) {\n            parent[parent_b] = parent_a;\n        } else if (rank[parent_a] < rank[parent_b]) {\n            parent[parent_a] = parent_b;\n        } else {\n            parent[parent_b] = parent_a;\n            rank[parent_a]++;\n        }\n        return true;\n    }\n\n   private:\n    vector<int> parent;\n    vector<int> rank;\n};\n")))}f.isMDXComponent=!0}}]);