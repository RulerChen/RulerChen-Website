"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5633],{94008:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Observability/practice1","title":"[Loki \u5be6\u6230] Express.js \u6253\u9020\u672c\u5730\u65e5\u8a8c\u76e3\u63a7\u7cfb\u7d71","description":"Grafana \u5be6\u6230\u6559\u5b78\uff0c\u4f7f\u7528 Express.js \u6253\u9020\u5b8c\u6574\u7684\u76e3\u63a7\u7cfb\u7d71","source":"@site/docs/Observability/practice1.mdx","sourceDirName":"Observability","slug":"/Observability/practice1","permalink":"/RulerChen-Website/docs/Observability/practice1","draft":false,"unlisted":false,"editUrl":"https://github.com/RulerChen/RulerChen-Website/tree/main/docs/Observability/practice1.mdx","tags":[],"version":"current","lastUpdatedAt":1740485505000,"sidebarPosition":1000,"frontMatter":{"title":"[Loki \u5be6\u6230] Express.js \u6253\u9020\u672c\u5730\u65e5\u8a8c\u76e3\u63a7\u7cfb\u7d71","sidebar_position":1000,"description":"Grafana \u5be6\u6230\u6559\u5b78\uff0c\u4f7f\u7528 Express.js \u6253\u9020\u5b8c\u6574\u7684\u76e3\u63a7\u7cfb\u7d71","keywords":["grafana","express","log","monitoring"]},"sidebar":"tutorialSidebar","previous":{"title":"[Faro] \u6d77\u4e4b\u71c8\u5854 - \u5c0e\u822a\u524d\u7aef\u6027\u80fd\u7684\u660e\u71c8","permalink":"/RulerChen-Website/docs/Observability/faro"},"next":{"title":"[CVE-2021-44228] log4j \u6f0f\u6d1e\u5fa9\u73fe","permalink":"/RulerChen-Website/docs/Security/log4j"}}');var r=a(74848),o=a(28453);const t={title:"[Loki \u5be6\u6230] Express.js \u6253\u9020\u672c\u5730\u65e5\u8a8c\u76e3\u63a7\u7cfb\u7d71",sidebar_position:1e3,description:"Grafana \u5be6\u6230\u6559\u5b78\uff0c\u4f7f\u7528 Express.js \u6253\u9020\u5b8c\u6574\u7684\u76e3\u63a7\u7cfb\u7d71",keywords:["grafana","express","log","monitoring"]},i=void 0,l={},c=[{value:"Express.js Setup",id:"expressjs-setup",level:2},{value:"Docker Compose",id:"docker-compose",level:2},{value:"Alloy",id:"alloy",level:3},{value:"Loki",id:"loki",level:3},{value:"Grafana",id:"grafana",level:3},{value:"Server",id:"server",level:3},{value:"Request",id:"request",level:3},{value:"Reference",id:"reference",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"\u5728\u9019\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u6703\u4f7f\u7528 Node.js (Express.js) \u5be6\u4f5c\u4e00\u500b\u7c21\u55ae\u7684 api\uff0c\u4e26\u4e14\u4f7f\u7528 grafana + alloy + loki \u642d\u914d docker compose \u4f86\u5728\u672c\u5730\u6253\u9020\u4e00\u5957\u65e5\u8a8c\u8490\u96c6\u7cfb\u7d71"}),"\n",(0,r.jsx)(n.h2,{id:"expressjs-setup",children:"Express.js Setup"}),"\n",(0,r.jsx)(n.p,{children:"\u9019\u6b21 demo \u7684\u6a94\u6848\u7d50\u69cb\u5982\u4e0b :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"\u251c\u2500 config\n\u2502  \u251c\u2500 alloy\n\u2502  \u2502  \u2514\u2500 config.alloy\n\u2502  \u251c\u2500 grafana\n\u2502  \u2502  \u251c\u2500 dashboards\n\u2502  \u2502  \u2514\u2500 provisioning\n\u2502  \u2502     \u2514\u2500 datasources\n\u2502  \u2502        \u2514\u2500 datasources.yaml\n\u2502  \u2514\u2500 loki\n\u2502     \u2514\u2500 loki.config.yaml\n\u251c\u2500 docker-compose.yaml\n\u251c\u2500 Dockerfile\n\u251c\u2500 index.mjs\n\u251c\u2500 logger.mjs\n\u251c\u2500 package-lock.json\n\u2514\u2500 package.json\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u9996\u5148\u6211\u5011\u9700\u8981\u5efa\u7acb\u4e00\u500b\u7c21\u55ae\u7684 api\uff0c\u9019\u88e1\u6211\u4f7f\u7528 Express.js"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm i express axios\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u63a5\u8457\u5728 ",(0,r.jsx)(n.code,{children:"index.js"})," \u4e2d\u5efa\u7acb\u4e00\u4e9b\u975e\u5e38\u7c21\u55ae\u7684 api\uff0c\u4e26\u52a0\u4e0a\u4e00\u500b middleware \u4f86\u8a18\u9304\u6bcf\u4e00\u6b21\u7684 request \u7684\u8cc7\u8a0a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="index.mjs"',children:"import express from 'express';\nimport logger from './logger.mjs';\n\nconst app = express();\n\napp.use((req, res, next) => {\n  res.on('finish', () => {\n    if (res.statusCode >= 400) {\n      logger.error({\n        message: `msg=\"Received response\" method=${req.method} path=${req.url} ip=${req.ip} status=${res.statusCode}`\n      });\n    } else {\n      logger.info({\n        message: `msg=\"Received response\" method=${req.method} path=${req.url} ip=${req.ip} status=${res.statusCode}`\n      });\n    }\n  });\n  next();\n});\n\napp.get('/api', (req, res) => {\n  if (Math.random() < 0.1) {\n    return res.status(500).send('Internal server error');\n  }\n  res.status(200).send('Hello, world!');\n});\n\napp.get('/api/random', (req, res) => {\n  if (Math.random() < 0.1) {\n    return res.status(400).send('Bad request');\n  }\n  res.status(200).send(Math.random().toString());\n});\n\napp.get('/api/book/:bookId', (req, res) => {\n  if (Math.random() < 0.1) {\n    return res.status(404).send('Book not found');\n  }\n  res.status(200).send(`Book ID: ${req.params.bookId}`);\n});\n\napp.post('/api/book', (req, res) => {\n  if (Math.random() < 0.1) {\n    return res.status(500).send('Internal server error');\n  }\n  res.status(201).send('Book created');\n});\n\napp.put('/api/book/:bookId', (req, res) => {\n  if (Math.random() < 0.1) {\n    return res.status(500).send('Internal server error');\n  }\n  res.status(200).send(`Book ID: ${req.params.bookId} updated`);\n});\n\napp.delete('/api/book/:bookId', (req, res) => {\n  if (Math.random() < 0.1) {\n    return res.status(500).send('Internal server error');\n  }\n  res.status(204).send();\n});\n\napp.listen(8000, () => {\n  console.log('Server is running on http://localhost:8000');\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u63a5\u8457\u5efa\u7acb ",(0,r.jsx)(n.code,{children:"logger.mjs"}),"\uff0c\u9019\u500b\u6a94\u6848\u662f\u7528\u4f86\u5c07 log \u8a18\u9304\u5230 alloy \u4e2d"]}),"\n",(0,r.jsxs)(n.p,{children:["\u9700\u8981\u7279\u5225\u6ce8\u610f\u7684\u662f\u50b3\u8f38\u7684\u683c\u5f0f\u5fc5\u9808\u7b26\u5408 loki \u7684\u683c\u5f0f\uff0c\u53ef\u4ee5\u53c3\u8003 ",(0,r.jsx)(n.a,{href:"https://grafana.com/docs/loki/latest/reference/loki-http-api/#ingest-logs",children:"Loki Push API"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "streams": [\n    {\n      "stream": {\n        "label": "value"\n      },\n      "values": [\n        ["<unix epoch in nanoseconds>", "<log line>", { "metadata": "value" }],\n        ["<unix epoch in nanoseconds>", "<log line>", { "metadata": "value" }]\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u4f7f\u7528\u7684\u65b9\u6cd5\u53ef\u4ee5\u53c3\u8003\u524d\u9762\u7684 api\uff0c\u5927\u9ad4\u4e0a\u4f86\u8aaa\u6703\u4f7f\u7528\u985e\u4f3c ",(0,r.jsx)(n.code,{children:"logger.info"})," \u7684\u65b9\u5f0f\u50b3\u5165 log level\u3002\n\u53c3\u6578\u662f\u4e00\u500b\u7269\u4ef6\uff0c\u5305\u542b\u4e86 ",(0,r.jsx)(n.code,{children:"message"})," \u548c ",(0,r.jsx)(n.code,{children:"metadata"}),"\uff0c",(0,r.jsx)(n.code,{children:"metadata"})," \u7528\u4f86\u8868\u793a loki \u4e2d\u7684 structured metadata\uff0c\u53ef\u4ee5\u7528\u4f86\u52a0\u901f\u67e5\u8a62\uff0c\u901a\u5e38\u6703\u5132\u5b58 pod id \u6216 trace id \u7b49\u8cc7\u8a0a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="logger.mjs"',children:"import axios from 'axios';\n\nclass LoggerService {\n  async log(level, message, metadata) {\n    metadata.pod = 'loki-123';\n\n    const lokiLogEntry = {\n      streams: [\n        {\n          stream: {\n            level,\n            service_name: 'loki-demo'\n          },\n          values: [[`${Date.now() * 1000000}`, message, metadata]]\n        }\n      ]\n    };\n\n    try {\n      await axios.post(`http://alloy:3100/loki/api/v1/push`, lokiLogEntry);\n      console.log(`[${level.toUpperCase()}] ${message}`);\n    } catch (error) {\n      console.error('Error logging to Loki: ', error);\n    }\n  }\n\n  fatal(payload) {\n    const { message, ...metadata } = payload;\n    this.log('fatal', message, metadata);\n  }\n\n  error(payload) {\n    const { message, ...metadata } = payload;\n    this.log('error', message, metadata);\n  }\n\n  warn(payload) {\n    const { message, ...metadata } = payload;\n    this.log('warn', message, metadata);\n  }\n\n  info(payload) {\n    const { message, ...metadata } = payload;\n    this.log('info', message, metadata);\n  }\n\n  debug(payload) {\n    const { message, ...metadata } = payload;\n    this.log('debug', message, metadata);\n  }\n}\n\nexport default new LoggerService();\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u6700\u5f8c\u4f7f\u7528\u7c21\u55ae\u7684 docker image \u4f86\u5305\u88dd\u6211\u5011\u7684 api"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dockerfile",metastring:'title="Dockerfile"',children:'FROM node:20-alpine3.18\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm ci --production\nCOPY . .\n\nEXPOSE 8000\n\nCMD ["node", "index.mjs"]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,r.jsx)(n.p,{children:"\u63a5\u4e0b\u4f86\u8b93\u6211\u5011\u4f86\u8a2d\u5b9a docker-compose \u4ee5\u53ca\u5404\u500b\u670d\u52d9\u7684 config file"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:"name: loki-demo\n\nservices:\n  alloy:\n    container_name: alloy\n    image: grafana/alloy:v1.6.1\n    restart: always\n    command: ['run', '--server.http.listen-addr=0.0.0.0:12345', '/etc/alloy/config.alloy']\n    healthcheck:\n      test:\n        [\n          'CMD',\n          '/bin/bash',\n          '-c',\n          \"echo -e 'GET /-/ready HTTP/1.1\\\\nHost: localhost\\\\nConnection: close\\\\n\\\\n' > /dev/tcp/localhost/12345\"\n        ]\n      interval: 5s\n      timeout: 5s\n      retries: 10\n      start_period: 5s\n    volumes:\n      - ./config/alloy/config.alloy:/etc/alloy/config.alloy\n    ports:\n      - '12345:12345'\n\n  loki:\n    container_name: loki\n    image: grafana/loki:3.4.2\n    restart: always\n    command: ['--pattern-ingester.enabled=true', '-config.file=/etc/loki/loki.config.yaml']\n    healthcheck:\n      test: wget --quiet --tries=1 --output-document=- http://localhost:3100/ready | grep -q -w ready || exit 1\n      interval: 10s\n      timeout: 5s\n      retries: 10\n      start_period: 20s\n    volumes:\n      - ./config/loki/loki.config.yaml:/etc/loki/loki.config.yaml\n    ports:\n      - '3100:3100'\n\n  grafana:\n    container_name: grafana\n    image: grafana/grafana:11.5.1\n    restart: always\n    environment:\n      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app\n      - GF_AUTH_ANONYMOUS_ENABLED=true\n      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin\n      - GF_AUTH_DISABLE_LOGIN_FORM=true\n    healthcheck:\n      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']\n      interval: 5s\n      timeout: 5s\n      retries: 5\n      start_period: 5s\n    volumes:\n      - ./config/grafana/provisioning:/etc/grafana/provisioning\n      - ./config/grafana/dashboards:/var/lib/grafana/dashboards\n    ports:\n      - '3000:3000'\n\n  server:\n    container_name: server\n    build:\n      dockerfile: Dockerfile\n    restart: always\n    ports:\n      - '8000:8000'\n    depends_on:\n      alloy:\n        condition: service_healthy\n        restart: true\n\n  request:\n    container_name: request\n    image: curlimages/curl:8.12.1\n    restart: always\n    command: |\n      sh -c 'while true; do\n        method=$$(echo \"GET POST PUT DELETE\" | tr \" \" \"\\n\" | shuf -n1)\n        bookId=$$(shuf -i 1-100 -n1)\n        case $$method in\n          GET)\n            ep=$$(echo \"/api /api/random /api/book/$$bookId\" | tr \" \" \"\\n\" | shuf -n1)\n            curl -s -X GET http://server:8000$$ep\n            ;;\n          POST)\n            curl -s -X POST -H \"Content-Type: application/json\" http://server:8000/api/book\n            ;;\n          PUT)\n            curl -s -X PUT -H \"Content-Type: application/json\" http://server:8000/api/book/$$bookId\n            ;;\n          DELETE)\n            curl -s -X DELETE http://server:8000/api/book/$$bookId\n            ;;\n        esac\n        sleep 1\n      done'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"alloy",children:"Alloy"}),"\n",(0,r.jsxs)(n.p,{children:["Alloy \u7684 config file \u683c\u5f0f\u6709\u9ede\u985e\u4f3c terraform \u7684 HCL\uff0c\u6211\u5011\u53ef\u4ee5\u5728 ",(0,r.jsx)(n.code,{children:"localhost:12345"})," \u4e2d\u67e5\u770b alloy \u7684\u6d41\u7a0b\u5716"]}),"\n",(0,r.jsx)(n.p,{children:"config file \u7684\u8a2d\u5b9a\u975e\u5e38\u7c21\u6613\uff0c\u76e3\u807d\u4e00\u500b loki \u683c\u5f0f\u7684 endpoint\uff0c\u4e26\u5c07 log \u8f49\u9001\u5230 loki"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",metastring:'title="config/alloy/config.alloy"',children:'loki.source.api "endpoint" {\n    http {\n        listen_address = "0.0.0.0"\n        listen_port = "3100"\n    }\n\n    forward_to = [loki.write.loki_server.receiver]\n}\n\nloki.write "loki_server" {\n    endpoint {\n        url = "http://loki:3100/loki/api/v1/push"\n\n        basic_auth {\n            username = ""\n            password = ""\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"loki",children:"Loki"}),"\n",(0,r.jsxs)(n.p,{children:["\u5728 loki \u7684\u8a2d\u5b9a\u4e5f\u662f\u4f7f\u7528\u6700\u57fa\u672c\u7684\u65b9\u5f0f\uff0c\u76e3\u807d 3100 port\uff0c\u4e26\u4e14\u5c07 log \u5b58\u653e\u5728 ",(0,r.jsx)(n.code,{children:"/tmp/loki"})," \u4e2d\uff0c\u6bd4\u8f03\u7279\u5225\u7684\u5730\u65b9\u662f\u555f\u7528\u4e86\u65b0\u7248\u672c\u624d\u652f\u63f4\u7684 structured metadata"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="config/loki/loki.config.yaml"',children:"auth_enabled: false\n\nserver:\n  http_listen_port: 3100\n  log_level: info\n\nlimits_config:\n  allow_structured_metadata: true\n  discover_log_levels: true\n  volume_enabled: true\n\ncommon:\n  storage:\n    filesystem:\n      chunks_directory: /tmp/loki/chunks\n      rules_directory: /tmp/loki/rules\n  ring:\n    instance_addr: 127.0.0.1\n    kvstore:\n      store: inmemory\n  replication_factor: 1\n  path_prefix: /tmp/loki\n\nschema_config:\n  configs:\n    - from: 2025-01-01\n      store: tsdb\n      object_store: filesystem\n      schema: v13\n      index:\n        prefix: index_\n        period: 24h\n"})}),"\n",(0,r.jsx)(n.h3,{id:"grafana",children:"Grafana"}),"\n",(0,r.jsx)(n.p,{children:"\u5728 docker-compose \u4e2d\uff0c\u5b89\u88dd\u4e86\u4e00\u500b\u8ddf loki \u6709\u95dc\u7684 plugin\uff0c\u4e26\u4e14\u8a2d\u5b9a\u4e86\u533f\u540d\u767b\u5165\u4ee5\u53ca\u8cc7\u6599\u4f86\u6e90\uff0c\u9019\u6a23\u6211\u5011\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728 localhost:3000 \u4e2d\u770b\u5230 loki \u7684 log \u4e86"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="config/grafana/provisioning/datasources/datasources.yaml"',children:"apiVersion: 1\n\ndatasources:\n  - name: Loki\n    type: loki\n    access: proxy\n    uid: loki\n    url: http://loki:3100\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u5b8c\u6210\u4e4b\u5f8c\uff0c\u53ef\u4ee5\u6253\u958b ",(0,r.jsx)(n.a,{href:"http://localhost:3000",children:"Grafana"}),"\uff0c\u4e26\u5728\u5de6\u908a\u7684 Explore \u4e2d\u9078\u64c7 Log\uff0c\u5c31\u80fd\u958b\u59cb\u770b\u5230 log \u4e86"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"dashboards",src:a(13029).A+"",width:"1894",height:"920"})}),"\n",(0,r.jsx)(n.h3,{id:"server",children:"Server"}),"\n",(0,r.jsx)(n.p,{children:"\u525b\u525b\u5efa\u7acb\u7684 api server\uff0c\u6703\u63a5\u6536\u8acb\u6c42\u4e26\u628a log \u50b3\u9001\u5230 alloy"}),"\n",(0,r.jsx)(n.h3,{id:"request",children:"Request"}),"\n",(0,r.jsx)(n.p,{children:"\u4f7f\u7528 curl \u6307\u4ee4\u6bcf\u79d2\u96a8\u6a5f\u5c0d server \u4e00\u500b api \u767c\u9001\u4e00\u6b21 request"}),"\n",(0,r.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://grafana.com/blog/2022/07/07/how-to-configure-grafana-loki-with-a-node.js-e-commerce-app/",children:"How to configure Grafana Loki with a Node.js e-commerce app"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://community.grafana.com/t/nodejs-logging-using-winston/76990",children:"Nodejs logging using winston"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://techblog.lycorp.co.jp/zh-hant/grafana-loki-upgrade-1",children:"Grafana Loki \u7cfb\u5217\u6587\u7ae0(I) -- \u4f7f\u7528\u91d1\u7d72\u96c0\u90e8\u7f72\u5347\u7d1a Loki\uff1a\u63d0\u5347\u6548\u80fd\u540c\u6642\u7bc0\u7701\u6210\u672c\u7684\u5be6\u8e10\u7d93\u9a57"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=EPLvB1eVJJk",children:"6 Easy Ways to Improve your Log Dashboards with Grafana and Loki"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},13029:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/image-7bc416bd39129fc0e9b0fa8f40ff11bd.png"},28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>i});var s=a(96540);const r={},o=s.createContext(r);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);