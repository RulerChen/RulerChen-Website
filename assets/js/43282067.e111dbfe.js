"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[325],{38766:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"PostgreSQL/pg-ha","title":"[PG] PostgreSQL High Availability","description":"Postgres \u9ad8\u53ef\u7528\u6027","source":"@site/docs/PostgreSQL/pg-ha.mdx","sourceDirName":"PostgreSQL","slug":"/PostgreSQL/pg-ha","permalink":"/RulerChen-Website/docs/PostgreSQL/pg-ha","draft":false,"unlisted":false,"editUrl":"https://github.com/RulerChen/RulerChen-Website/tree/main/docs/PostgreSQL/pg-ha.mdx","tags":[],"version":"current","lastUpdatedAt":1735389509000,"sidebarPosition":20,"frontMatter":{"title":"[PG] PostgreSQL High Availability","sidebar_position":20,"description":"Postgres \u9ad8\u53ef\u7528\u6027","keywords":["Postgres","\u9ad8\u53ef\u7528\u6027"]},"sidebar":"tutorialSidebar","previous":{"title":"[PG] PostgreSQL Performance Tuning","permalink":"/RulerChen-Website/docs/PostgreSQL/pg-tuning"},"next":{"title":"Observability","permalink":"/RulerChen-Website/docs/Observability/"}}');var t=s(74848),r=s(28453);const l={title:"[PG] PostgreSQL High Availability",sidebar_position:"20",description:"Postgres \u9ad8\u53ef\u7528\u6027",keywords:["Postgres","\u9ad8\u53ef\u7528\u6027"]},a=void 0,c={},o=[{value:"Environment Setup",id:"environment-setup",level:2},{value:"Scaling PostgreSQL",id:"scaling-postgresql",level:2},{value:"Streaming Replication",id:"streaming-replication",level:2},{value:"Logical Replication",id:"logical-replication",level:2},{value:"PgBouncer",id:"pgbouncer",level:2},{value:"Partition",id:"partition",level:2},{value:"Sharding",id:"sharding",level:2},{value:"PostgreSQL High Availability",id:"postgresql-high-availability",level:2},{value:"Pgpool II",id:"pgpool-ii",level:2},{value:"Reference",id:"reference",level:2}];function d(n){const e={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["\u9019\u7bc7\u6587\u7ae0\u662f\u6211\u770b\u4e86 ",(0,t.jsx)(e.a,{href:"https://www.udemy.com/course/postgresql-replication-high-availability-ha-and-scalability",children:"PostgreSQL Replication, High Availability HA and Scalability"})," \u9019\u9580\u8ab2\u5f8c\u7684\u7b46\u8a18\u3002"]}),"\n",(0,t.jsx)(e.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u9019\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u6703\u5728 GCP \u4e0a\u9762\u5efa\u7acb\u4e00\u500b VM (Debian) \u4f86\u5b89\u88dd PostgreSQL (15.10) \u4f86\u505a demo"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo apt install postgresql\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5b89\u88dd\u5b8c\u4e4b\u5f8c\u61c9\u8a72\u6703\u81ea\u884c\u555f\u52d5\uff0c\u6211\u5011\u53ef\u4ee5\u900f\u904e\u4ee5\u4e0b\u6307\u4ee4\u4f86\u78ba\u8a8d\u662f\u5426\u6709\u555f\u52d5"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo systemctl status postgresql\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u6211\u5011\u53ef\u4ee5\u5207\u63db\u4f7f\u7528\u8005\u4e26\u4e14\u9032\u5165 psql \u4f86\u9032\u884c\u64cd\u4f5c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npsql\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u8f38\u5165 ",(0,t.jsx)(e.code,{children:"\\q"})," \u5373\u53ef\u96e2\u958b psql"]}),"\n",(0,t.jsxs)(e.p,{children:["\u9664\u6b64\u4e4b\u5916\u6211\u5011\u6703\u4f7f\u7528\u5230 ",(0,t.jsx)(e.code,{children:"pg_ctl"})," \u9019\u500b\u6307\u4ee4\uff0c\u9700\u8981\u5148\u8a2d\u5b9a ",(0,t.jsx)(e.code,{children:".bashrc"})," \u8ddf ",(0,t.jsx)(e.code,{children:".bash_profile"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"nano ~/.bashrc\n# set export PATH=$PATH:/usr/lib/postgresql/15/bin\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"nano ~/.bash_profile\n# set\n# if [ -f ~/.bashrc ]; then\n#   . ~/.bashrc\n# fi\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u91cd\u65b0\u767b\u5165\u5c31\u6703\u81ea\u52d5\u8f09\u5165\u8a2d\u5b9a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pg_ctl --version\n"})}),"\n",(0,t.jsx)(e.h2,{id:"scaling-postgresql",children:"Scaling PostgreSQL"}),"\n",(0,t.jsx)(e.p,{children:"\u7576\u6211\u5011\u7684\u8cc7\u6599\u5eab\u9700\u8981\u8655\u7406\u5927\u91cf\u7684\u8cc7\u6599\u6642\uff0c\u6211\u5011\u9996\u5148\u9700\u8981\u6aa2\u67e5\u6211\u5011\u7684\u8cc7\u6599\u5eab\u662f\u5426\u5df2\u7d93\u9054\u5230\u5176\u8655\u7406\u80fd\u529b\u7684\u6975\u9650\uff0c\u50cf\u662f SQL \u512a\u5316\u6216\u53c3\u6578\u8abf\u6574\u7b49\u7b49\uff0c\n\u5982\u679c\u9084\u662f\u6c92\u8fa6\u6cd5\u63d0\u4f9b\u8db3\u5920\u7684\u6548\u80fd\uff0c\u6211\u5011\u5c31\u9700\u8981\u8003\u616e\u64f4\u5145\u6211\u5011\u7684\u8cc7\u6599\u5eab"}),"\n",(0,t.jsx)(e.p,{children:"\u64f4\u5145\u8cc7\u6599\u5eab\u7684\u65b9\u5f0f\u5927\u81f4\u5206\u70ba\u4ee5\u4e0b\u5169\u7a2e :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Vertical Scaling"}),": \u589e\u52a0\u8cc7\u6e90\uff0c\u50cf\u662f CPU\u3001Memory\u3001Storage \u7b49\u7b49"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Horizontal Scaling"}),": \u589e\u52a0\u7bc0\u9ede\uff0c\u50cf\u662f\u589e\u52a0\u8cc7\u6599\u5eab\u7bc0\u9ede\u3001\u589e\u52a0\u8cc7\u6599\u5eab\u53e2\u96c6\u7b49\u7b49"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Scaling",src:s(81902).A+"",width:"1654",height:"904"})}),"\n",(0,t.jsx)(e.h2,{id:"streaming-replication",children:"Streaming Replication"}),"\n",(0,t.jsx)(e.p,{children:"Streaming Replication \u662f PostgreSQL \u7528\u4f86\u5be6\u73fe\u9ad8\u53ef\u7528\u6027\u7684\u4e3b\u8981\u6a5f\u5236\uff0c\u5b83\u900f\u904e\u5c07\u4e3b\u7bc0\u9ede\u7684 WAL \u65e5\u8a8c\u50b3\u9001\u5230\u5f9e\u7bc0\u9ede\uff0c\u5f9e\u800c\u5be6\u73fe\u63a5\u8fd1\u5be6\u6642\u7684\u8cc7\u6599\u540c\u6b65\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u5728 PostgreSQL \u4e2d\u9810\u8a2d\u7684\u57f7\u884c\u65b9\u5f0f\u662f\u975e\u540c\u6b65\u7684\uff0c\u8aaa\u4e3b\u7bc0\u9ede\u5728\u57f7\u884c\u5b8c\u4e00\u500b transaction \u5f8c\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u5f9e\u7bc0\u9ede\u78ba\u8a8d\u6536\u5230 WAL \u65e5\u8a8c\uff0c\u5c31\u53ef\u4ee5\u7e7c\u7e8c\u57f7\u884c\u4e0b\u4e00\u500b transaction\u3002\n\u9019\u7a2e\u65b9\u6cd5\u7684\u597d\u8655\u662f\u6548\u80fd\u8f03\u9ad8\uff0c\u7f3a\u9ede\u662f\u5982\u679c\u767c\u751f\u6545\u969c\uff0c\u53ef\u80fd\u6703\u56e0\u70ba WAL \u7f3a\u5c11\u800c\u5c0e\u81f4\u8cc7\u6599\u4e0d\u4e00\u81f4\u3002\n\u6211\u5011\u4e5f\u53ef\u4ee5\u8a2d\u7f6e\u70ba\u540c\u6b65\uff0c\u9019\u6a23\u4e3b\u7bc0\u9ede\u5728\u57f7\u884c\u5b8c\u5f8c\uff0c\u9700\u8981\u7b49\u5f85\u5f9e\u7bc0\u9ede\u78ba\u8a8d\u6536\u5230 WAL \u65e5\u8a8c\uff0c\u624d\u80fd\u7e7c\u7e8c\u57f7\u884c\uff0c\n\u9019\u7a2e\u65b9\u6cd5\u7684\u597d\u8655\u662f\u8cc7\u6599\u4e00\u81f4\u6027\u8f03\u9ad8\u4e14\u53ef\u4ee5\u4fdd\u8b49\u8cc7\u6599\u7684\u5b8c\u6574\u6027\uff0c\u7f3a\u9ede\u662f\u6548\u80fd\u8f03\u4f4e\u3002"}),"\n",(0,t.jsx)(e.p,{children:"\u6211\u5011\u53ef\u4ee5\u91dd\u5c0d\u4e0d\u540c\u7684\u8cc7\u6599 (table)\uff0c\u4f86\u9078\u64c7\u4e0d\u540c\u7684\u65b9\u5f0f\u3002"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Streaming Replication",src:s(28142).A+"",width:"1052",height:"548"})}),"\n",(0,t.jsx)(e.p,{children:"synchronous_commit \u7684\u8a2d\u5b9a\u6709\u4ee5\u4e0b\u5e7e\u7a2e :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"off"}),": \u53ea\u5beb\u5165 shared buffer\uff0c\u4e0d\u4fdd\u8b49\u5beb\u5165 WAL \u65e5\u8a8c"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"local"}),": \u5beb\u5165 WAL buffer\uff0c\u4e26\u540c\u6b65\u5230\u672c\u5730\u7684\u786c\u789f"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"remote_write"}),": \u4e3b\u7bc0\u9ede\u5beb\u5165\u786c\u789f\uff0c\u5f9e\u7bc0\u9ede\u7684 WAL buffer \u6536\u5230\u4f46\u4e0d\u4fdd\u8b49\u5beb\u5165\u786c\u789f"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"remote_apply"}),": \u5728\u55ae\u6a5f\u72c0\u614b\u4e0b\u8207 ",(0,t.jsx)(e.code,{children:"local"})," \u76f8\u540c\uff0c\u5728\u591a\u6a5f\u74b0\u5883\u4e0b\uff0c\u4e3b\u7bc0\u9ede\u5beb\u5165\u786c\u789f\uff0c\u5f9e\u7bc0\u9ede\u6536\u5230\u4e26\u5beb\u5165\u786c\u789f"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"on"}),": \u4e3b\u7bc0\u9ede\u5beb\u5165\u786c\u789f\uff0c\u5f9e\u7bc0\u9ede\u6536\u5230\u4e26\u5beb\u5165\u786c\u789f\u4e26\u6210\u529f\u61c9\u7528"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u9996\u5148\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"initdb"})," \u4f86\u521d\u59cb\u5316\u8cc7\u6599\u5eab\u96c6\u7fa4\uff0c\u8cc7\u6599\u5eab\u96c6\u7fa4\u662f\u7531\u55ae\u500b\u8cc7\u6599\u5eab\u5be6\u4f8b\u6240\u7ba1\u7406\u7684\u8cc7\u6599\u5eab\u96c6\u5408\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"which initdb\n/usr/lib/postgresql/15/bin/initdb\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"initdb -D /tmp/primary_db/\nnano /tmp/primary_db/postgresql.conf\n# set listen_addresses to '*'\n# set port to 5433\n\n# set permission\nsudo chown -R postgres:postgres /tmp/primary_db\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db start\npsql --port=5433 postgres\n\ncreate user requser replication;\n\nnano /tmp/primary_db/pg_hba.conf\n# add the following line\n# host all requser 127.0.0.1/32 trust\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db restart\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u63a5\u8457\u6211\u5011\u5275\u5efa\u4e00\u500b replication \u7684\u8cc7\u6599\u5eab\uff0c\u4e26\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"pg_basebackup"})," \u4f86\u9032\u884c\u8907\u88fd"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pg_basebackup -h localhost -U requser --checkpoint=fast -D /tmp/replica_db -R --slot=some_slot -C --port 5433\nnano /tmp/replica_db/postgresql.conf\n\n# set listen_addresses to '*'\n# set port to 5434\npg_ctl -D /tmp/replica_db start\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6700\u5f8c\u8b93\u6211\u5011\u4f86\u505a\u4e3b\u7bc0\u9ede\u7684\u6e2c\u8a66"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql --port=5433 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM pg_stat_replication;\n-- result\n-[ RECORD 1 ]----+------------------------------\npid              | 595\nusesysid         | 16384\nusename          | requser\napplication_name | walreceiver\nclient_addr      | ::1\nclient_hostname  |\nclient_port      | 49798\nbackend_start    | 2024-08-03 12:15:14.549951+00\nbackend_xmin     |\nstate            | streaming\nsent_lsn         | 0/3000148\nwrite_lsn        | 0/3000148\nflush_lsn        | 0/3000148\nreplay_lsn       | 0/3000148\nwrite_lag        |\nflush_lag        |\nreplay_lag       |\nsync_priority    | 0\nsync_state       | async\nreply_time       | 2024-08-03 12:33:45.648063+00\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5f9e\u7bc0\u9ede\u7684\u6e2c\u8a66"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql postgres --port=5434\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM pg_stat_wal_receiver;\n-- result\n-[ RECORD 1 ]---------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\npid                   | 594\nstatus                | streaming\nreceive_start_lsn     | 0/3000000\nreceive_start_tli     | 1\nwritten_lsn           | 0/3000148\nflushed_lsn           | 0/3000148\nreceived_tli          | 1\nlast_msg_send_time    | 2024-08-03 12:36:45.703365+00\nlast_msg_receipt_time | 2024-08-03 12:36:45.70343+00\nlatest_end_lsn        | 0/3000148\nlatest_end_time       | 2024-08-03 12:15:14.551133+00\nslot_name             | some_slot\nsender_host           | localhost\nsender_port           | 5433\nconninfo              | user=requser passfile=/var/lib/postgresql/.pgpass channel_binding=prefer dbname=replication host=localhost port=5433 fallback_application_name=walreceiver sslmode=prefer sslcompression=0 sslcertmode=allow sslsni=1 ssl_min_protocol_version=TLSv1.2 gssencmode=prefer krbsrvname=postgres gssdelegation=0 target_session_attrs=any load_balance_hosts=disable\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u6211\u5011\u5728\u4e3b\u7bc0\u9ede\u4e0a\u5275\u5efa\u4e00\u500b table\uff0c\u7136\u5f8c\u5728\u5f9e\u7bc0\u9ede\u4e0a\u67e5\u8a62\uff0c\u770b\u770b\u662f\u5426\u80fd\u5920\u67e5\u8a62\u5230"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"CREATE TABLE test_table (id SERIAL PRIMARY KEY, name VARCHAR(255));\nINSERT INTO test_table (name) VALUES ('test');\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM test_table;\n-- result\n id | name\n----+------\n  1 | test\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5982\u679c\u5728\u5169\u53f0\u6a5f\u5668\u4e0a\u90fd\u80fd\u5920\u67e5\u8a62\u5230\uff0c\u4ee3\u8868\u6211\u5011\u7684 streaming replication \u662f\u6210\u529f\u7684"}),"\n",(0,t.jsx)(e.p,{children:"\u6700\u5f8c\u95dc\u9589\u8cc7\u6599\u5eab"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npg_ctl -D /tmp/primary_db stop\npg_ctl -D /tmp/replica_db stop\n"})}),"\n",(0,t.jsx)(e.h2,{id:"logical-replication",children:"Logical Replication"}),"\n",(0,t.jsxs)(e.p,{children:["logical replication \u662f\u4e00\u7a2e\u900f\u904e\u5c07 SQL \u8a9e\u53e5\u4f86\u9032\u884c\u8907\u88fd\u7684\u65b9\u5f0f\uff0c\n\u9019\u7a2e\u65b9\u5f0f\u7684\u597d\u8655\u662f\u8cc7\u6599\u8907\u88fd\u7684\u6548\u80fd\u8f03\u9ad8\u9069\u7528\u65bc\u7db2\u8def\u74b0\u5883\u8f03\u5dee\u7684\u5730\u65b9\uff0c\u4e14\u53ef\u4ee5\u5728\u4e0d\u540c\u7248\u672c\u4e4b\u9593\u9032\u884c\u8907\u88fd\uff0c\u540c\u6642\u4e5f\u53ef\u4ee5\u9078\u64c7\u8907\u88fd\u7279\u5b9a\u7684\u8cc7\u6599\uff0c\n\u7f3a\u9ede\u662f\u7121\u6cd5\u57f7\u884c\u4e00\u4e9b DDL \u7684\u6307\u4ee4\uff0c\u50cf\u662f ",(0,t.jsx)(e.code,{children:"CREATE TABLE"})," \u6216\u662f ",(0,t.jsx)(e.code,{children:"ALTER TABLE"})," \u7b49\u7b49\uff0c\n\u540c\u6642 sequence \u7684\u503c\u9ed8\u8a8d\u4e5f\u4e0d\u6703\u8907\u88fd\uff0c\u9019\u4ee3\u8868\u5982\u679c\u9700\u8981 failover \u7684\u8a71\uff0c\u9700\u8981\u53e6\u5916\u8655\u7406 sequence \u7684\u503c"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Logical Replication",src:s(76244).A+"",width:"1138",height:"563"})}),"\n",(0,t.jsx)(e.p,{children:"\u5275\u5efa\u8cc7\u6599\u5eab\u4e26\u4fee\u6539\u53c3\u6578"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"initdb -D /tmp/publish_db/\ninitdb -D /tmp/subscribe_db/\n\nsudo chown -R postgres:postgres /tmp/publish_db\nsudo chown -R postgres:postgres /tmp/subscribe_db\nsudo -i -u postgres\n\nnano /tmp/publish_db/postgresql.conf\n# set wal_level to logical\n# set port to 5433\n\nnano /tmp/subscribe_db/postgresql.conf\n# set port to 5434\n\nsudo -i -u postgres\npg_ctl -D /tmp/publish_db start\npg_ctl -D /tmp/subscribe_db start\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5275\u5efa\u597d\u8868\uff0c\u4e26\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"pg_dump"})," \u4f86\u8907\u88fd\u8cc7\u6599"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql postgres --port=5433\n\nCREATE DATABASE pub;\n\\c pub\nCREATE TABLE test_table (id SERIAL PRIMARY KEY, name VARCHAR(255));\nINSERT INTO test_table (name) VALUES ('test');\n\nexit\npsql postgres --port=5434\nCREATE DATABASE sub;\n\nexit\npg_dump -t test_table -p 5433 -s pub | psql -p 5434 -d sub\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5275\u5efa publication \u548c subscription"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\n\npsql pub --port=5433\nCREATE PUBLICATION test_publication FOR TABLE test_table;\n\npsql sub --port=5434\nCREATE SUBSCRIPTION test_subscription CONNECTION 'host=localhost port=5433 user=rulerchen dbname=pub' PUBLICATION test_publication;\n# -- (\u9700\u8981\u6539 user)\n\nSELECT * FROM test_table;\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u63a5\u8457\u6211\u5011\u53ef\u4ee5\u900f\u904e ",(0,t.jsx)(e.code,{children:"pg_stat_replication"})," \u4f86\u67e5\u770b replication \u7684\u72c0\u614b\uff0c\u4e26\u6ce8\u610f lag \u7684\u90e8\u5206"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"write_lag"}),": \u4e3b\u7bc0\u9ede\u5beb\u5165 WAL \u7684\u6642\u9593"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"flush_lag"}),": \u4e3b\u7bc0\u9ede\u5c07 WAL \u5237\u65b0\u5230\u78c1\u76e4\u7684\u6642\u9593"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"replay_lag"}),": \u5f9e\u7bc0\u9ede\u61c9\u7528 WAL \u7684\u6642\u9593"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SELECT * FROM pg_stat_replication;\n-- result\n-[ RECORD 1 ]----+------------------------------\npid              | 222\nusesysid         | 10\nusename          | postgres\napplication_name | test_subscription\nclient_addr      | ::1\nclient_hostname  |\nclient_port      | 36752\nbackend_start    | 2024-08-04 07:23:31.011034+00\nbackend_xmin     |\nstate            | streaming\nsent_lsn         | 0/196EA40\nwrite_lsn        | 0/196EA40\nflush_lsn        | 0/196EA40\nreplay_lsn       | 0/196EA40\nwrite_lag        |\nflush_lag        |\nreplay_lag       |\nsync_priority    | 0\nsync_state       | async\nreply_time       | 2024-08-04 07:41:12.252314+00\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6211\u5011\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\u4f86\u67e5\u770b publication \u548c subscription \u7684\u72c0\u614b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"\\dRp\n-- result\nList of publications\n-[ RECORD 1 ]----------------\nName       | test_publication\nOwner      | postgres\nAll tables | f\nInserts    | t\nUpdates    | t\nDeletes    | t\nTruncates  | t\nVia root   | f\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"\\dRs\n-- result\nList of subscriptions\n-[ RECORD 1 ]-------------------\nName        | test_subscription\nOwner       | postgres\nEnabled     | t\nPublication | {test_publication}\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6700\u5f8c\u95dc\u9589\u8cc7\u6599\u5eab"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\nsource ~/.bashrc\npg_ctl -D /tmp/publish_db stop\npg_ctl -D /tmp/subscribe_db stop\n"})}),"\n",(0,t.jsx)(e.h2,{id:"pgbouncer",children:"PgBouncer"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u6b63\u5e38\u7684\u60c5\u6cc1\u4e0b\uff0cPostgreSQL \u53ef\u4ee5\u5728\u4e00\u79d2\u9418\u8655\u7406\u7d04 350 \u500b transaction\uff0c\n\u5982\u679c\u8d85\u904e\u7684\u8a71\u5c31\u53ef\u4ee5\u8003\u616e\u4f7f\u7528 connection pool \u4f86\u9032\u884c\u512a\u5316\uff0c\n\u9019\u6a23\u53ef\u4ee5\u6e1b\u5c11\u6bcf\u6b21\u9023\u63a5\u8cc7\u6599\u5eab\u6642\u5275\u5efa process (fork) \u6240\u9700\u8981\u6d88\u8017\u7684\u8cc7\u6e90"}),"\n",(0,t.jsx)(e.p,{children:"PgBouncer \u672c\u8eab\u6c92\u6709\u652f\u63f4 multi-host\u3001failover \u4ee5\u53ca load balancing\uff0c\n\u6240\u4ee5\u5982\u679c\u9700\u8981\u9019\u6a23\u7684\u529f\u80fd\uff0c\u6211\u5011\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u7684\u5de5\u5177"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"PgBouncer",src:s(98703).A+"",width:"994",height:"552"})}),"\n",(0,t.jsx)(e.p,{children:"pgbouncer \u5305\u542b\u4e09\u7a2e\u6a21\u5f0f :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"session"}),": \u9ed8\u8a8d\u548c\u6700\u5b89\u5168\u7684\u6a21\u5f0f\uff0cclient \u5728\u9023\u63a5\u671f\u9593\uff0c\u6703\u6301\u7e8c\u4fdd\u6301\u9023\u63a5\uff0c\u76f4\u5230 session \u7d50\u675f"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"transaction"}),": client \u50c5\u5728 transaction \u671f\u9593\u4fdd\u6301\u8207\u8cc7\u6599\u5eab\u7684\u9023\u63a5"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"statement"}),": \u6bcf\u500b SQL \u8a9e\u53e5\u57f7\u884c\u5f8c\uff0c\u9023\u63a5\u5c31\u6703\u8fd4\u56de\u5230\u6c60\u4e2d"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u4e0b\u4f86\u6211\u5011\u6703\u5b89\u88dd pgbouncer \u4e26\u4e14\u9032\u884c\u7c21\u55ae\u7684\u8a2d\u5b9a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"initdb -D /tmp/pgbouncer_db/\nsudo chown -R postgres:postgres /tmp/pgbouncer_db\n\nsudo -i -u postgres\npg_ctl -D /tmp/pgbouncer_db start\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo apt install pgbouncer\ncd /etc/pgbouncer\nsudo cp pgbouncer.ini pgbouncer.ini.bak # \u5099\u4efd\u539f\u672c\u7684\u8a2d\u5b9a\nsudo nano pgbouncer.ini\n# set test_db = dbname=postgres host=localhost port=5432 auth_user=postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql -p 5432 postgres\nCREATE USER postgres SUPERUSER;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u555f\u52d5 pgbouncer"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\n/usr/sbin/pgbouncer /etc/pgbouncer/pgbouncer.ini\n# \u8a18\u5f97\u5148\u95dc\u9589 pgbouncer\n# sudo systemctl stop pgbouncer\n\n# adjust min_pool_size\u3001default_pool_size\u3001max_client_conn to appropriate value\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u6211\u5011\u53ef\u4ee5\u900f\u904e pgbench \u4f86\u9032\u884c\u58d3\u529b\u6e2c\u8a66"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo touch /tmp/pgbouncer_db/test.sql\nsudo nano /tmp/pgbouncer_db/test.sql\n# SELECT 1;\n\nsudo -i -u postgres\npg_ctl -D /tmp/pgbouncer_db start\nexit\n\npgbench -i postgres\nsudo chmod 755 /tmp/pgbouncer_db/\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6c92\u6709 pgbouncer \u7684\u60c5\u6cc1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pgbench -c 10 -t 500 -S postgres -C -f /tmp/pgbouncer_db/test.sql -p 5432\n# -- result\npgbench (15.10 (Debian 15.10-0+deb12u1))\nstarting vacuum...end.\ntransaction type: multiple scripts\nscaling factor: 1\nquery mode: simple\nnumber of clients: 10\nnumber of threads: 1\nmaximum number of tries: 1\nnumber of transactions per client: 500\nnumber of transactions actually processed: 5000/5000\nnumber of failed transactions: 0 (0.000%)\nlatency average = 44.289 ms\naverage connection time = 4.395 ms\ntps = 225.789016 (including reconnection times)\nSQL script 1: <builtin: select only>\n - weight: 1 (targets 50.0% of total)\n - 2453 transactions (49.1% of total, tps = 110.772091)\n - number of failed transactions: 0 (0.000%)\n - latency average = 17.399 ms\n - latency stddev = 11.772 ms\nSQL script 2: /tmp/pgbouncer_db/test.sql\n - weight: 1 (targets 50.0% of total)\n - 2547 transactions (50.9% of total, tps = 115.016925)\n - number of failed transactions: 0 (0.000%)\n - latency average = 16.865 ms\n - latency stddev = 11.840 ms\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6709 pgbouncer \u7684\u60c5\u6cc1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npgbench -c 10 -t 500 -S test_db -C -f /tmp/pgbouncer_db/test.sql -p 6432\n# -- result\npgbench (15.10 (Debian 15.10-0+deb12u1))\nstarting vacuum...end.\ntransaction type: multiple scripts\nscaling factor: 1\nquery mode: simple\nnumber of clients: 10\nnumber of threads: 1\nmaximum number of tries: 1\nnumber of transactions per client: 500\nnumber of transactions actually processed: 5000/5000\nnumber of failed transactions: 0 (0.000%)\nlatency average = 5.059 ms\naverage connection time = 0.432 ms\ntps = 1976.638505 (including reconnection times)\nSQL script 1: <builtin: select only>\n - weight: 1 (targets 50.0% of total)\n - 2468 transactions (49.4% of total, tps = 975.668766)\n - number of failed transactions: 0 (0.000%)\n - latency average = 2.538 ms\n - latency stddev = 1.538 ms\nSQL script 2: /tmp/pgbouncer_db/test.sql\n - weight: 1 (targets 50.0% of total)\n - 2532 transactions (50.6% of total, tps = 1000.969739)\n - number of failed transactions: 0 (0.000%)\n - latency average = 2.361 ms\n - latency stddev = 1.460 ms\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u53ef\u4ee5\u89c0\u5bdf\u5230 tps \u6709\u660e\u986f\u7684\u63d0\u5347\uff0c\u5f9e 225 \u63d0\u5347\u5230 1976\u3002"}),"\n",(0,t.jsx)(e.p,{children:"pgbench \u7684\u53c3\u6578\u8aaa\u660e\u5982\u4e0b :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-i"}),": \u521d\u59cb\u5316\u8cc7\u6599\u5eab"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-c"}),": \u540c\u6642\u57f7\u884c\u7684 client \u6578\u91cf"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-t"}),": \u6bcf\u500b client \u57f7\u884c\u7684 transaction \u6578\u91cf"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-S"}),": \u4f7f\u7528 simple query mode"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-C"}),": \u70ba\u6bcf\u500b transaction \u5275\u5efa\u4e00\u500b\u65b0\u7684\u9023\u63a5"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-f"}),": \u6307\u5b9a\u8981\u57f7\u884c\u7684 SQL \u6a94\u6848"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"-p"}),": \u6307\u5b9a port"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"partition",children:"Partition"}),"\n",(0,t.jsx)(e.p,{children:"\u5c0d\u65bc\u8cc7\u6599\u91cf\u5927\u7684\u8868\uff0c\u4e0d\u7ba1\u662f\u67e5\u8a62\u6216\u662f vacuum \u90fd\u6703\u9700\u8981\u8f03\u9577\u7684\u6642\u9593\uff0c\u9019\u6642\u5019\u6211\u5011\u53ef\u4ee5\u8003\u616e\u5c07\u8868\u9032\u884c\u5206\u5272\u63d0\u5347\u6548\u80fd"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u65b0\u7248\u7684 PostgreSQL \u4e2d\uff0cpartition \u591a\u4f7f\u7528 declarative \u7684\u65b9\u5f0f\u4f86\u9032\u884c\u5206\u5272\uff0c\u800c\u4e0d\u662f inheritance \u7684\u65b9\u5f0f\u3002"}),"\n",(0,t.jsx)(e.p,{children:"partition \u7684\u65b9\u6cd5\u5927\u81f4\u6709\u4ee5\u4e0b\u56db\u7a2e :"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Range Partition"}),": \u4f9d\u7167\u7bc4\u570d\u4f86\u9032\u884c\u5206\u5272\uff0c\u50cf\u662f\u6642\u9593\u3001\u6578\u503c\u7b49\u7b49"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"List Partition"}),": \u4f9d\u7167\u7279\u5b9a\u7684\u503c\u4f86\u9032\u884c\u5206\u5272"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Hash Partition"}),": \u4f9d\u7167 hash \u503c\u4f86\u9032\u884c\u5206\u5272"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Composite Partition"}),": \u7d50\u5408\u4ee5\u4e0a\u5169\u7a2e\u6216\u591a\u7a2e\u65b9\u5f0f\u4f86\u9032\u884c\u5206\u5272"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npg_ctl -D /tmp/primary_db start\npsql --port=5433 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"CREATE TABLE customers (\n    id INT,\n    name TEXT,\n    age NUMERIC\n) PARTITION BY RANGE (age);\n\nCREATE TABLE customers_young PARTITION OF customers FOR VALUES FROM (MINVALUE) TO (25);\nCREATE TABLE customers_adult PARTITION OF customers FOR VALUES FROM (25) TO (65);\nCREATE TABLE customers_old PARTITION OF customers FOR VALUES FROM (65) TO (MAXVALUE);\n\nINSERT INTO customers (id, name, age) VALUES (1, 'John Doe', 20), (2, 'Jane Doe', 30), (3, 'John Smith', 60), (4, 'Jane Smith', 70);\n\nSELECT tableoid::regclass, * FROM customers;\n-- result\n    tableoid     | id |    name    | age\n-----------------+----+------------+-----\n customers_young |  1 | John Doe   |  20\n customers_adult |  2 | Jane Doe   |  30\n customers_adult |  3 | John Smith |  60\n customers_old   |  4 | Jane Smith |  70\n(4 rows)\n"})}),"\n",(0,t.jsx)(e.h2,{id:"sharding",children:"Sharding"}),"\n",(0,t.jsx)(e.p,{children:"sharding \u662f\u5c07\u8cc7\u6599\u5206\u5272\u5230\u591a\u500b\u8cc7\u6599\u5eab\uff0c\u4ee5\u6e1b\u8f15\u55ae\u500b\u8cc7\u6599\u5eab\u7684\u8ca0\u64d4\u3002"}),"\n",(0,t.jsx)(e.p,{children:"sharding \u7684\u95dc\u9375\u5728\u65bc\u5982\u4f55\u9078\u64c7 sharding key\uff0c\n\u6211\u5011\u9700\u8981\u4f9d\u64da\u696d\u52d9\u5834\u666f\u4f86\u9078\u64c7\u5408\u9069\u7684 sharding key\uff0c\n\u4f86\u4fdd\u8b49\u6211\u5011\u7684\u67e5\u8a62\u6216\u5beb\u5165\u76e1\u91cf\u843d\u5728\u540c\u4e00\u500b\u8cc7\u6599\u5eab\u4e2d\u3002"}),"\n",(0,t.jsx)(e.h2,{id:"postgresql-high-availability",children:"PostgreSQL High Availability"}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u751f\u7522\u74b0\u5883\u4e2d\uff0c\u6211\u5011\u9700\u8981\u8003\u616e\u5728\u5404\u7a2e\u4e0d\u540c\u7684\u74b0\u5883\u4e0b\u90fd\u80fd\u7a69\u5b9a\u5730\u63d0\u4f9b\u670d\u52d9\uff0c\u9019\u6642\u5019\u6211\u5011\u5c31\u9700\u8981\u8003\u616e\u9ad8\u53ef\u7528\u6027\u7684\u554f\u984c"}),"\n",(0,t.jsx)(e.p,{children:"HA \u4e3b\u8981\u5206\u70ba\u4e09\u500b\u6b65\u9a5f :"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"replication : \u4e3b\u7bc0\u9ede\u5c07\u8cc7\u6599\u8907\u88fd\u5230\u5f9e\u7bc0\u9ede\uff0c\u4ee5\u4fdd\u8b49\u8cc7\u6599\u7684\u4e00\u81f4\u6027"}),"\n",(0,t.jsx)(e.li,{children:"failover : \u7576\u4e3b\u7bc0\u9ede\u6545\u969c\u6642\uff0c\u5f9e\u7bc0\u9ede\u81ea\u52d5\u5347\u7d1a\u70ba\u4e3b\u7bc0\u9ede"}),"\n"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pg_ctl promote"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pgpool II"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"PAF"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Patroni"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Repmgr"})}),"\n"]}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsx)(e.li,{children:"failback : \u7576\u4e3b\u7bc0\u9ede\u6062\u5fa9\u6b63\u5e38\u6642\uff0c\u5f9e\u7bc0\u9ede\u964d\u7d1a\u70ba\u5f9e\u7bc0\u9ede"}),"\n"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pg rewind"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"pgpool II"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"PAF"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Patroni"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Repmgr"})}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u8655\u7406 HA \u4e4b\u524d\u8981\u5148\u4e86\u89e3\u4ee5\u4e0b\u5e7e\u500b\u554f\u984c :"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u8cc7\u6599\u7684\u91cd\u8981\u6027"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(18585).A+"",width:"1150",height:"600"})}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"RTO (Recovery Time Objective) && RPO (Recovery Point Objective)"}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.img,{alt:"HA Problem",src:s(68235).A+"",width:"903",height:"538"}),"\n",(0,t.jsx)(e.img,{alt:"HA Problem",src:s(4578).A+"",width:"834",height:"548"})]}),"\n",(0,t.jsxs)(e.ol,{start:"3",children:["\n",(0,t.jsx)(e.li,{children:"Auto failover \u7684\u6a5f\u5236"}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.img,{alt:"HA Problem",src:s(2832).A+"",width:"1124",height:"552"}),"\n",(0,t.jsx)(e.img,{alt:"HA Problem",src:s(18135).A+"",width:"1084",height:"627"})]}),"\n",(0,t.jsxs)(e.ol,{start:"4",children:["\n",(0,t.jsx)(e.li,{children:"Cross-center replication"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(5445).A+"",width:"1144",height:"575"})}),"\n",(0,t.jsxs)(e.ol,{start:"5",children:["\n",(0,t.jsx)(e.li,{children:"Do we open replication for read"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(87932).A+"",width:"921",height:"572"})}),"\n",(0,t.jsx)(e.p,{children:"\u4e00\u500b\u57fa\u672c\u7684\u67b6\u69cb\u5716\u5927\u81f4\u5982\u4e0b :"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"HA Problem",src:s(29404).A+"",width:"1086",height:"630"})}),"\n",(0,t.jsx)(e.h2,{id:"pgpool-ii",children:"Pgpool II"}),"\n",(0,t.jsx)(e.p,{children:"pgpool \u662f\u4e00\u500b\u4f4d\u5728\u8cc7\u6599\u5eab\u8ddf\u5ba2\u6236\u7aef\u7684 middleware\uff0c\n\u53ef\u4ee5\u63d0\u4f9b load balancing\u3001failover\u3001connection pooling \u7b49\u529f\u80fd\uff0c\n\u662f\u4e00\u500b\u5f88\u597d\u7684 HA \u89e3\u6c7a\u65b9\u6848"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u4e0b\u4f86\u6703\u793a\u7bc4 pgpool \u7684\u7c21\u6613\u8a2d\u5b9a :"}),"\n",(0,t.jsx)(e.p,{children:"\u9996\u5148\u9700\u8981\u8a2d\u5b9a streaming application\uff0c\u8ddf\u4e4b\u524d\u7684\u8a2d\u5b9a\u76f8\u540c\uff0c\u4e26\u5b89\u88dd pgpool"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo -i -u postgres\npg_ctl -D /tmp/primary_db start\npg_ctl -D /tmp/replica_db start\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u4e0b\u4f86\u6211\u5011\u6703\u5148\u8a2d\u5b9a load balance \u7684\u90e8\u5206\uff0c\u5c07 SELECT \u7684 query \u5c0e\u5411 replica\uff0c\u5176\u4ed6\u7684 query \u5c0e\u5411 primary"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo apt install pgpool2\n\ncd /etc/pgpool2\nsudo nano pgpool.conf\n# set listen_addresses to '*'\n\n# set backend_hostname0 to localhost\n# set backend_port0 to 5433\n# set backend_weight0 to 0\n# set backend_data_directory0 to '/tmp/primary_db/'\n\n# set backend_hostname1 to localhost\n# set backend_port1 to 5434\n# set backend_weight1 to 1\n# set backend_data_directory1 to '/tmp/replica_db/'\n\n# set log_statement to 'on'\n# set log_per_node_statement to 'on'\n\n# set sr_check_user to 'requser'\n\n# set health_check_period to 10\n# set health_check_user to 'requser'\n\nsudo systemctl stop pgpool2\nsudo /usr/sbin/pgpool -n -f /etc/pgpool2/pgpool.conf\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u5617\u8a66\u9023\u7dda"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql -p 9999 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"CREATE TABLE table1 (id SERIAL PRIMARY KEY, name VARCHAR(255));\nINSERT INTO table1 (name) VALUES ('test');\nSELECT * FROM table1;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u5728 pgpool \u7684 log \u4e2d\u6211\u5011\u53ef\u4ee5\u770b\u5230 query \u662f\u5982\u4f55\u88ab\u5c0e\u5411\u7684"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"2024-12-27 02:58:32.383: psql pid 40763: LOG:  DB node id: 0 backend pid: 40797 statement: CREATE TABLE table1 (id SERIAL PRIMARY KEY, name VARCHAR(255));\n2024-12-27 02:58:35.931: psql pid 40763: LOG:  DB node id: 0 backend pid: 40797 statement: INSERT INTO table1 (name) VALUES ('test');\n2024-12-27 02:59:00.839: psql pid 40763: LOG:  DB node id: 1 backend pid: 40798 statement: SELECT * FROM table1;\n"})}),"\n",(0,t.jsx)(e.p,{children:"SELECT \u88ab\u5c0e\u5411\u5230 node 1\uff0c\u5176\u4ed6\u7684 query \u5247\u88ab\u5c0e\u5411\u5230 node 0"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u6211\u5011\u6703\u5229\u7528 pgpool \u4f86\u5be6\u73fe HA :"}),"\n",(0,t.jsxs)(e.p,{children:["\u9996\u5148\u6211\u5011\u6703\u5148\u4fee\u6539 primary \u7684\u8a2d\u5b9a\uff0c\u5c07 synchronous \u4fee\u6539\u70ba remote_apply\uff0c\u4e26\u4e14\u8a2d\u5b9a wal_log_hints \u70ba on (\u65b9\u4fbf\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"pg_rewind"})," \u4f86\u9032\u884c failback)"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /tmp/primary_db/postgresql.conf\n\n# set synchronous_commit to remote_apply\n# set synchronous_standby_names to '*'\n# set wal_log_hints to on\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db restart\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u65b0\u589e\u4e00\u500b\u6a94\u6848\u4f86\u7576\u4f5c failover \u7684 script"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /tmp/failover.sh\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",metastring:'title="/tmp/failover.sh"',children:"#! /bin/sh\nfailed_node=$1\ntrigger_file=$2\n\nif [$failed_node = 1];\nthen exit 0;\nfi\n\ntouch $trigger_file\nexit 0;\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u4fee\u6539 pgpool \u7684\u8a2d\u5b9a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /etc/pgpool2/pgpool.conf\n\n# set failover_command to '/tmp/failover.sh %d /tmp/replica_db/down.trg'\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u4fee\u6539 replica \u7684\u8a2d\u5b9a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo nano /tmp/replica_db/postgresql.conf\n\n# set promote_trigger_file to '/tmp/replica_db/down.trg'\n\nsudo -i -u postgres\npg_ctl -D /tmp/replica_db restart\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u4f86\u505a\u6e2c\u8a66\uff0c\u6211\u5011\u6703\u555f\u52d5 pgpool \u4e26\u628a primary_db \u95dc\u9589\u4f86\u6e2c\u8a66\u7d50\u679c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sudo systemctl stop pgpool2\nsudo chmod +x /tmp/failover.sh\nsudo /usr/sbin/pgpool -n -f /etc/pgpool2/pgpool.conf\n\nsudo -i -u postgres\npg_ctl -D /tmp/primary_db stop\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u505c\u6b62 primary \u4e4b\u5f8c\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230 pgpool \u7684 log \u4e2d\u6709 failover \u7684\u8a0a\u606f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"2024-12-27 14:32:55.722: main pid 51351: LOG:  execute command: /tmp/failover.sh 0 /tmp/replica_db/down.trg\n2024-12-27 14:32:55.750: main pid 51351: LOG:  find_primary_node_repeatedly: waiting for finding a primary node\n2024-12-27 14:32:55.755: main pid 51351: LOG:  find_primary_node: standby node is 1\n2024-12-27 14:32:56.760: main pid 51351: LOG:  find_primary_node: standby node is 1\n2024-12-27 14:32:57.765: main pid 51351: LOG:  find_primary_node: primary node is 1\n2024-12-27 14:32:57.766: main pid 51351: LOG:  failover: set new primary node: 1\n2024-12-27 14:32:57.766: main pid 51351: LOG:  failover: set new main node: 1\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u8457\u6211\u5011\u53ef\u4ee5\u5617\u8a66\u9023\u7dda\u5230 pgpool \u4f86\u67e5\u770b\u662f\u5426\u771f\u7684\u9023\u63a5\u5230\u4e86 replica"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"psql -p 9999 postgres\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-SQL",children:"SHOW port;\n# -- result\n port\n------\n 5434\n(1 row)\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u9019\u6a23\u4ee3\u8868\u6211\u5011\u6210\u529f\u9023\u5230\u4e86\u7b2c\u4e8c\u500b\u7bc0\u9ede\uff0c\u5b8c\u6210\u4e86 failover \u7684\u6e2c\u8a66"}),"\n",(0,t.jsxs)(e.p,{children:["\u6700\u5f8c\uff0c\u7576\u6211\u5011\u7684\u6545\u969c\u7bc0\u9ede\u6062\u5fa9\u6b63\u5e38\u6642\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"pg_rewind"})," \u4f86\u9032\u884c failback"]}),"\n",(0,t.jsx)(e.h2,{id:"reference",children:"Reference"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.udemy.com/course/postgresql-replication-high-availability-ha-and-scalability",children:"PostgreSQL Replication, High Availability HA and Scalability"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.interdb.jp/pg/index.html",children:"The Internals of PostgreSQL"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.youtube.com/watch?v=a_lW1Hz-IPU",children:"Scaling PostgreSQL with Google Cloud and HAProxy"})}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},76244:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-1-e2174585abf64dcc3e3f553d2f5e701a.png"},28142:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-10-6a666c38c2d3febb18a300499825faab.png"},18135:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-11-6065b5f7679677d4f63bd6c496636501.png"},29404:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-12-42d8d39af659e187ed8625550f7b8c80.png"},98703:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-2-ea84074f202988d0af69359a84ceb2b8.png"},18585:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-4-43ddab330de03fd9be5d3839420acb1a.png"},2832:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-5-188a8cfcf12935273ef3f49331db134a.png"},68235:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-6-c45c5c7d2f3ce27138d4d9fd9596a702.png"},4578:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-7-cf637ecc909fb1861929e56a3baffe4c.png"},5445:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-8-30da38745b6cb7a9f25fa250d4453c6b.png"},87932:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-9-bbf01b748da17a187599839ada5b5bbd.png"},81902:(n,e,s)=>{s.d(e,{A:()=>i});const i=s.p+"assets/images/image-0c0bd50adc5761f6c79e1bb1a0ccff47.png"},28453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function l(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);